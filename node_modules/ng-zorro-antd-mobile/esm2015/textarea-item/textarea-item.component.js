/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, forwardRef, HostBinding, ElementRef, Renderer2 } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
export class TextareaItemComponent {
    /**
     * @param {?} element
     * @param {?} render
     */
    constructor(element, render) {
        this.element = element;
        this.render = render;
        this.prefixCls = 'am-textarea';
        this.isTitleString = true;
        this.maxLength = Infinity;
        this._prefixListCls = 'am-list';
        this._defaultValue = '';
        this._placeholder = '';
        this._editable = true;
        this._disabled = false;
        this._clear = false;
        this._rows = 1;
        this._error = false;
        this._labelNumber = 5;
        this._name = '';
        this._focus = false;
        this._autoFocus = false;
        this._isClear = false;
        this._isClickingClear = false;
        this.onChange = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.onErrorClick = new EventEmitter();
        this.clsItem = true;
        this._onChange = (/**
         * @param {?} _
         * @return {?}
         */
        (_) => { });
        this._el = element.nativeElement;
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} v
     * @return {?}
     */
    set value(v) {
        if (typeof v === 'undefined' || v === null) {
            this._value = '';
        }
        else {
            this._value = v;
        }
        this.textRef.nativeElement.value = this._value;
        this._onChange(this._value);
    }
    /**
     * @return {?}
     */
    get defaultValue() {
        return this._defaultValue;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set defaultValue(value) {
        this._defaultValue = value;
        this._value = this._defaultValue;
        this.textRef.nativeElement.value = this._value;
    }
    /**
     * @return {?}
     */
    get placeholder() {
        return this._placeholder;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set placeholder(value) {
        this._placeholder = value;
    }
    /**
     * @return {?}
     */
    get editable() {
        return this._editable;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set editable(value) {
        this._editable = value;
    }
    /**
     * @return {?}
     */
    get disabled() {
        return this._disabled;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set disabled(value) {
        this._disabled = value;
        this.setCls();
    }
    /**
     * @return {?}
     */
    get clear() {
        return this._clear;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set clear(value) {
        this._clear = value;
    }
    /**
     * @return {?}
     */
    get rows() {
        return this._rows;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set rows(value) {
        this._rows = value;
        this.setCls();
    }
    /**
     * @return {?}
     */
    get error() {
        return this._error;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set error(value) {
        this._error = value;
        this.setCls();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set labelNumber(value) {
        this._labelNumber = value;
        this.setCls();
    }
    /**
     * @return {?}
     */
    get count() {
        return this._count;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set count(value) {
        this._count = value;
        this.setCls();
        this.setCharacterLength();
    }
    /**
     * @return {?}
     */
    get prefixListCls() {
        return this._prefixListCls;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set prefixListCls(value) {
        this._prefixListCls = value;
        this.setCls();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set name(value) {
        this._name = value;
        this.textRef.nativeElement.name = this._name;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set autoHeight(value) {
        this._autoHeight = value;
    }
    /**
     * @return {?}
     */
    get title() {
        return this._title;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set title(value) {
        this._title = value;
        this.isTitleString = true;
        if (typeof value !== 'string') {
            this.isTitleString = false;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set focus(value) {
        if (value && value.focus) {
            this.textRef.nativeElement.focus();
            this.inputFocus('');
        }
    }
    /**
     * @return {?}
     */
    get autoFocus() {
        return this._autoFocus;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set autoFocus(value) {
        this._autoFocus = value;
    }
    /**
     * @return {?}
     */
    setCls() {
        this.hasCount = this._count > 0 && this._rows > 1;
        this.render.addClass(this._el, this._prefixListCls + '-item');
        this.clsSingleLine = this._rows === 1 && !this._autoHeight;
        this.clsDisabled = this._disabled;
        this.clsError = this._error;
        this.clsFocus = this._focus;
        this.clsHasCount = this.hasCount;
        this.labelCls = {
            [`${this.prefixCls}-label`]: true,
            [`${this.prefixCls}-label-2`]: this._labelNumber === 2,
            [`${this.prefixCls}-label-3`]: this._labelNumber === 3,
            [`${this.prefixCls}-label-4`]: this._labelNumber === 4,
            [`${this.prefixCls}-label-5`]: this._labelNumber === 5,
            [`${this.prefixCls}-label-6`]: this._labelNumber === 6,
            [`${this.prefixCls}-label-7`]: this._labelNumber === 7
        };
        this.controlCls = { [`${this.prefixCls}-control`]: true };
        this.clearCls = {
            [`${this.prefixCls}-clear-active`]: this._isClickingClear
        };
    }
    /**
     * @return {?}
     */
    setCharacterLength() {
        this.characterLength = this.countSymbols(this._value);
        if (this._count > 0) {
            this.maxLength = this._count - this.characterLength + (this._value ? this._value.length : 0);
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    inputChange(e) {
        this._value = e;
        this.textRef.nativeElement.value = this._value;
        this.setCharacterLength();
        this._onChange(this._value);
        this.onChange.emit(this._value);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    inputFocus(value) {
        this._focus = true;
        this.setCls();
        if (value !== undefined) {
            this.onFocus.emit(value);
        }
    }
    /**
     * @param {?} value
     * @param {?} event
     * @return {?}
     */
    inputBlur(value, event) {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this._focus = false;
            this.setCls();
            this.onBlur.emit(value);
            this._isClear = false;
        }), 100);
    }
    /**
     * @return {?}
     */
    clearInput() {
        this._isClickingClear = true;
        this.setCls();
        setTimeout((/**
         * @return {?}
         */
        () => {
            this._value = '';
            this.inputChange('');
            this.inputFocus(this._value);
            this._isClickingClear = false;
            this.setCls();
        }), 100);
    }
    /**
     * @param {?} e
     * @return {?}
     */
    errorClick(e) {
        if (this.onErrorClick) {
            this.onErrorClick.emit(e);
        }
    }
    /**
     * @return {?}
     */
    reAlignHeight() {
        /** @type {?} */
        const textareaDom = this.textRef.nativeElement;
        textareaDom.style.height = '';
        textareaDom.style.height = `${textareaDom.scrollHeight}px`;
    }
    /**
     * @param {?=} text
     * @return {?}
     */
    countSymbols(text = '') {
        /** @type {?} */
        const regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]|\n/g;
        return text.replace(regexAstralSymbols, '_').length;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        if (typeof value === 'undefined' || value === null) {
            this._value = '';
        }
        else {
            this._value = value;
        }
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this._onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) { }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.setCls();
        this.setCharacterLength();
        this.textRef.nativeElement.value = this._value;
    }
    /**
     * @return {?}
     */
    ngAfterContentChecked() {
        if (this._autoHeight && this._focus) {
            this.reAlignHeight();
        }
    }
}
TextareaItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'TextareaItem , nzm-textarea-item',
                template: "<div *ngIf=\"title &&  isTitleString\" [ngClass]=\"labelCls\">{{title}}</div>\n  <div *ngIf=\"title &&  !isTitleString\" [ngClass]=\"labelCls\">\n    <ng-template [ngTemplateOutlet]=\"title\"></ng-template>\n  </div>\n  <div [ngClass]=\"controlCls\">\n    <textarea #text\n              [rows]=\"rows\"\n              [maxlength]=\"maxLength\"\n              [(ngModel)]=\"value\"\n              [defaultValue]=\"defaultValue\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              [readOnly]=\"!editable\"\n              [autofocus]=\"autoFocus\"\n              (ngModelChange)=\"inputChange($event)\"\n              (blur)=\"inputBlur(value , $event)\"\n              (focus)=\"inputFocus(value)\"\n    ></textarea>\n  </div>\n  <div *ngIf=\"clear && editable && !disabled && (value && value.length >0 )\"\n       class=\"{{prefixCls}}-clear\"\n       [ngClass]=\"clearCls\"\n       (click)=\"clearInput()\"\n  ></div>\n  <div *ngIf=\"error\" class=\"{{prefixCls}}-error-extra\" (click)=\"errorClick($event)\"></div>\n  <span *ngIf=\"hasCount\" class=\"{{prefixCls}}-count\">\n    <span>{{characterLength}}</span>/{{count}}\n  </span>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => TextareaItemComponent)),
                        multi: true
                    }
                ]
            }] }
];
/** @nocollapse */
TextareaItemComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
TextareaItemComponent.propDecorators = {
    textRef: [{ type: ViewChild, args: ['text',] }],
    value: [{ type: Input }],
    defaultValue: [{ type: Input }],
    placeholder: [{ type: Input }],
    editable: [{ type: Input }],
    disabled: [{ type: Input }],
    clear: [{ type: Input }],
    rows: [{ type: Input }],
    error: [{ type: Input }],
    labelNumber: [{ type: Input }],
    count: [{ type: Input }],
    prefixListCls: [{ type: Input }],
    name: [{ type: Input }],
    autoHeight: [{ type: Input }],
    title: [{ type: Input }],
    focus: [{ type: Input }],
    autoFocus: [{ type: Input }],
    onChange: [{ type: Output }],
    onBlur: [{ type: Output }],
    onFocus: [{ type: Output }],
    onErrorClick: [{ type: Output }],
    clsItem: [{ type: HostBinding, args: ['class.am-textarea-item',] }],
    clsDisabled: [{ type: HostBinding, args: ['class.am-textarea-disabled',] }],
    clsError: [{ type: HostBinding, args: ['class.am-textarea-error',] }],
    clsFocus: [{ type: HostBinding, args: ['class.am-textarea-focus',] }],
    clsSingleLine: [{ type: HostBinding, args: ['class.am-textarea-item-single-line',] }],
    clsHasCount: [{ type: HostBinding, args: ['class.am-textarea-has-count',] }]
};
if (false) {
    /** @type {?} */
    TextareaItemComponent.prototype.prefixCls;
    /** @type {?} */
    TextareaItemComponent.prototype.wrapCls;
    /** @type {?} */
    TextareaItemComponent.prototype.labelCls;
    /** @type {?} */
    TextareaItemComponent.prototype.controlCls;
    /** @type {?} */
    TextareaItemComponent.prototype.clearCls;
    /** @type {?} */
    TextareaItemComponent.prototype.hasCount;
    /** @type {?} */
    TextareaItemComponent.prototype.characterLength;
    /** @type {?} */
    TextareaItemComponent.prototype.isTitleString;
    /** @type {?} */
    TextareaItemComponent.prototype.maxLength;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._el;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._prefixListCls;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._value;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._defaultValue;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._placeholder;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._editable;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._clear;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._rows;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._count;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._autoHeight;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._error;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._labelNumber;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._name;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._title;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._focus;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._autoFocus;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._isClear;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype._isClickingClear;
    /** @type {?} */
    TextareaItemComponent.prototype.textRef;
    /** @type {?} */
    TextareaItemComponent.prototype.onChange;
    /** @type {?} */
    TextareaItemComponent.prototype.onBlur;
    /** @type {?} */
    TextareaItemComponent.prototype.onFocus;
    /** @type {?} */
    TextareaItemComponent.prototype.onErrorClick;
    /** @type {?} */
    TextareaItemComponent.prototype.clsItem;
    /** @type {?} */
    TextareaItemComponent.prototype.clsDisabled;
    /** @type {?} */
    TextareaItemComponent.prototype.clsError;
    /** @type {?} */
    TextareaItemComponent.prototype.clsFocus;
    /** @type {?} */
    TextareaItemComponent.prototype.clsSingleLine;
    /** @type {?} */
    TextareaItemComponent.prototype.clsHasCount;
    /** @type {?} */
    TextareaItemComponent.prototype._onChange;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype.element;
    /**
     * @type {?}
     * @private
     */
    TextareaItemComponent.prototype.render;
}
//# sourceMappingURL=data:application/json;base64,