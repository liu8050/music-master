/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, Output, HostBinding, TemplateRef, EventEmitter } from '@angular/core';
export class CalendarHeaderComponent {
    constructor() {
        this.closeIcon_component = false;
        this._closeIcon = 'X';
        this.onCancel = new EventEmitter();
        this.onClear = new EventEmitter();
        this.header = true;
    }
    /**
     * @return {?}
     */
    get locale() {
        return this._locale;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set locale(value) {
        this._locale = value;
    }
    /**
     * @return {?}
     */
    get closeIcon() {
        return this._closeIcon;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set closeIcon(value) {
        if (value instanceof TemplateRef) {
            this._closeIcon = value;
            this.closeIcon_component = true;
        }
        else {
            this._closeIcon = (/** @type {?} */ (value));
            this.closeIcon_component = false;
        }
    }
    /**
     * @return {?}
     */
    get showClear() {
        return this._showClear;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set showClear(value) {
        this._showClear = value;
    }
    /**
     * @return {?}
     */
    triggerCancel() {
        this.onCancel && this.onCancel.emit();
    }
    /**
     * @return {?}
     */
    triggerClear() {
        this.onClear && this.onClear.emit();
    }
}
CalendarHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'CalendarHeader, nzm-calendar-header',
                template: "<span *ngIf=\"!closeIcon_component\" class=\"left\" (click)=\"triggerCancel()\" [innerHTML]=\"closeIcon\"></span>\n<span *ngIf=\"closeIcon_component\" class=\"left\" (click)=\"triggerCancel()\">\n  <ng-template [ngTemplateOutlet]=\"closeIcon\"></ng-template>\n</span>\n<span class=\"title\">{{title || locale.title}}</span>\n<span *ngIf=\"showClear\" class=\"right\" (click)=\"triggerClear()\">{{clearIcon || locale.clear}}</span>\n",
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
CalendarHeaderComponent.ctorParameters = () => [];
CalendarHeaderComponent.propDecorators = {
    locale: [{ type: Input }],
    closeIcon: [{ type: Input }],
    showClear: [{ type: Input }],
    onCancel: [{ type: Output }],
    onClear: [{ type: Output }],
    header: [{ type: HostBinding, args: ['class.header',] }]
};
if (false) {
    /** @type {?} */
    CalendarHeaderComponent.prototype.title;
    /** @type {?} */
    CalendarHeaderComponent.prototype.closeIcon_component;
    /** @type {?} */
    CalendarHeaderComponent.prototype.clearIcon;
    /**
     * @type {?}
     * @private
     */
    CalendarHeaderComponent.prototype._locale;
    /**
     * @type {?}
     * @private
     */
    CalendarHeaderComponent.prototype._showClear;
    /**
     * @type {?}
     * @private
     */
    CalendarHeaderComponent.prototype._closeIcon;
    /** @type {?} */
    CalendarHeaderComponent.prototype.onCancel;
    /** @type {?} */
    CalendarHeaderComponent.prototype.onClear;
    /** @type {?} */
    CalendarHeaderComponent.prototype.header;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiY2FsZW5kYXIvaGVhZGVyL2hlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsaUJBQWlCLEVBQ2pCLEtBQUssRUFDTCxNQUFNLEVBQ04sV0FBVyxFQUNYLFdBQVcsRUFDWCxZQUFZLEVBQ2IsTUFBTSxlQUFlLENBQUM7QUFRdkIsTUFBTSxPQUFPLHVCQUF1QjtJQTJDbEM7UUF6Q0Esd0JBQW1CLEdBQVksS0FBSyxDQUFDO1FBSzdCLGVBQVUsR0FBUSxHQUFHLENBQUM7UUE4QjlCLGFBQVEsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUV0RCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFFeEIsV0FBTSxHQUFZLElBQUksQ0FBQztJQUVyQyxDQUFDOzs7O0lBbENoQixJQUNJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQzs7Ozs7SUFDRCxJQUFJLE1BQU0sQ0FBQyxLQUFLO1FBQ2QsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQzs7OztJQUNELElBQ0ksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDOzs7OztJQUNELElBQUksU0FBUyxDQUFDLEtBQWdDO1FBQzVDLElBQUksS0FBSyxZQUFZLFdBQVcsRUFBRTtZQUNoQyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztZQUN4QixJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDO1NBQ2pDO2FBQU07WUFDTCxJQUFJLENBQUMsVUFBVSxHQUFHLG1CQUFRLEtBQUssRUFBQSxDQUFDO1lBQ2hDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxLQUFLLENBQUM7U0FDbEM7SUFDSCxDQUFDOzs7O0lBQ0QsSUFDSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7Ozs7O0lBQ0QsSUFBSSxTQUFTLENBQUMsS0FBSztRQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztJQUMxQixDQUFDOzs7O0lBVUQsYUFBYTtRQUNYLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN4QyxDQUFDOzs7O0lBRUQsWUFBWTtRQUNWLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QyxDQUFDOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQ0FBcUM7Z0JBQy9DLDRiQUFzQztnQkFDdEMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7YUFDdEM7Ozs7O3FCQVVFLEtBQUs7d0JBT0wsS0FBSzt3QkFhTCxLQUFLO3VCQU9MLE1BQU07c0JBRU4sTUFBTTtxQkFHTixXQUFXLFNBQUMsY0FBYzs7OztJQXhDM0Isd0NBQWM7O0lBQ2Qsc0RBQXFDOztJQUNyQyw0Q0FBZTs7Ozs7SUFFZiwwQ0FBbUM7Ozs7O0lBQ25DLDZDQUE0Qjs7Ozs7SUFDNUIsNkNBQThCOztJQTZCOUIsMkNBQ3NEOztJQUN0RCwwQ0FDcUQ7O0lBRXJELHlDQUFvRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIEhvc3RCaW5kaW5nLFxuICBUZW1wbGF0ZVJlZixcbiAgRXZlbnRFbWl0dGVyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0ZU1vZGVscyB9IGZyb20gJy4uL2RhdGUvRGF0YVR5cGVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnQ2FsZW5kYXJIZWFkZXIsIG56bS1jYWxlbmRhci1oZWFkZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vaGVhZGVyLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBDYWxlbmRhckhlYWRlckNvbXBvbmVudCB7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGNsb3NlSWNvbl9jb21wb25lbnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgY2xlYXJJY29uOiBhbnk7XG5cbiAgcHJpdmF0ZSBfbG9jYWxlOiBEYXRlTW9kZWxzLkxvY2FsZTtcbiAgcHJpdmF0ZSBfc2hvd0NsZWFyOiBib29sZWFuO1xuICBwcml2YXRlIF9jbG9zZUljb246IGFueSA9ICdYJztcblxuICBASW5wdXQoKVxuICBnZXQgbG9jYWxlKCkge1xuICAgIHJldHVybiB0aGlzLl9sb2NhbGU7XG4gIH1cbiAgc2V0IGxvY2FsZSh2YWx1ZSkge1xuICAgIHRoaXMuX2xvY2FsZSA9IHZhbHVlO1xuICB9XG4gIEBJbnB1dCgpXG4gIGdldCBjbG9zZUljb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Nsb3NlSWNvbjtcbiAgfVxuICBzZXQgY2xvc2VJY29uKHZhbHVlOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+KSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgVGVtcGxhdGVSZWYpIHtcbiAgICAgIHRoaXMuX2Nsb3NlSWNvbiA9IHZhbHVlO1xuICAgICAgdGhpcy5jbG9zZUljb25fY29tcG9uZW50ID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fY2xvc2VJY29uID0gPHN0cmluZz52YWx1ZTtcbiAgICAgIHRoaXMuY2xvc2VJY29uX2NvbXBvbmVudCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuICBASW5wdXQoKVxuICBnZXQgc2hvd0NsZWFyKCkge1xuICAgIHJldHVybiB0aGlzLl9zaG93Q2xlYXI7XG4gIH1cbiAgc2V0IHNob3dDbGVhcih2YWx1ZSkge1xuICAgIHRoaXMuX3Nob3dDbGVhciA9IHZhbHVlO1xuICB9XG4gIEBPdXRwdXQoKVxuICBvbkNhbmNlbDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQE91dHB1dCgpXG4gIG9uQ2xlYXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5oZWFkZXInKSBoZWFkZXI6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICB0cmlnZ2VyQ2FuY2VsKCkge1xuICAgIHRoaXMub25DYW5jZWwgJiYgdGhpcy5vbkNhbmNlbC5lbWl0KCk7XG4gIH1cblxuICB0cmlnZ2VyQ2xlYXIoKSB7XG4gICAgdGhpcy5vbkNsZWFyICYmIHRoaXMub25DbGVhci5lbWl0KCk7XG4gIH1cblxufVxuIl19