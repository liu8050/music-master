/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, TemplateRef, HostBinding } from '@angular/core';
export class GridComponent {
    constructor() {
        this.wrapCls = {};
        this.itemCls = {};
        this.carouselProps = {
            dots: false,
            dragging: false
        };
        this.defaultProps = {
            data: [],
            hasLine: true,
            isCarousel: false,
            columnNum: 4,
            carouselMaxRow: 2,
            prefixCls: 'am-grid',
            square: true,
            itemStyle: {}
        };
        this.carouselData = [];
        this.carouselDataTmp = [];
        this.gridData = [];
        this._data = [];
        this.columnNum = 4;
        this.carouselMaxRow = 2;
        this.itemStyle = {};
        this.square = true;
        this.hasLine = true;
        this.activeStyle = true;
        this.onClick = new EventEmitter();
        this.amGrid = true;
    }
    /**
     * @return {?}
     */
    get isCarousel() {
        return this.defaultProps.isCarousel;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set isCarousel(value) {
        this.defaultProps.isCarousel = value;
        this.init();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set data(value) {
        this._data = value;
        this.init();
    }
    /**
     * @return {?}
     */
    get amGridSquare() {
        return true === this.square;
    }
    /**
     * @return {?}
     */
    get amGridLine() {
        return true === this.hasLine;
    }
    /**
     * @return {?}
     */
    get amGridCarousel() {
        return true === this.isCarousel;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    getContentType(value) {
        if ((value.indexOf('http') >= 0 || value.indexOf('assets') >= 0) && value.indexOf('<') < 0) {
            return 'url';
        }
        else if (value.indexOf('<') >= 0) {
            return 'innerHTML';
        }
        else if (value instanceof TemplateRef) {
            return 'TemplateRef';
        }
        else {
            return 'icon';
        }
    }
    /**
     * @return {?}
     */
    init() {
        /** @type {?} */
        const dataLength = (this._data && this._data.length) || 0;
        /** @type {?} */
        let rowCount = Math.ceil(dataLength / this.columnNum);
        /** @type {?} */
        let rowsArr;
        if (this.defaultProps.isCarousel) {
            if (rowCount % this.carouselMaxRow !== 0) {
                rowCount = rowCount + this.carouselMaxRow - (rowCount % this.carouselMaxRow);
            }
            /** @type {?} */
            const pageCount = Math.ceil(rowCount / this.carouselMaxRow);
            rowsArr = this.getRows(rowCount, dataLength);
            if (pageCount <= 1) {
                this.carouselProps = {
                    dots: false,
                    dragging: false
                };
            }
            else {
                this.carouselProps = {
                    dots: true,
                    dragging: true
                };
            }
            this.carouselDataTmp = this.getCarouselData(rowsArr, pageCount, rowCount);
        }
        else {
            this.gridData = this.getRows(rowCount, dataLength);
        }
    }
    /**
     * @param {?} rowsArr
     * @param {?} pageCount
     * @param {?} rowCount
     * @return {?}
     */
    getCarouselData(rowsArr, pageCount, rowCount) {
        /** @type {?} */
        const pagesArr = [];
        for (let pageIndex = 0; pageIndex < pageCount; pageIndex++) {
            /** @type {?} */
            const pageRows = [];
            for (let ii = 0; ii < this.carouselMaxRow; ii++) {
                /** @type {?} */
                const rowIndex = pageIndex * this.carouselMaxRow + ii;
                if (rowIndex < rowCount) {
                    pageRows.push(rowsArr[rowIndex]);
                }
                else {
                    // 空节点为了确保末尾页的最后未到底的行有底线(样式中last-child会没线)
                    pageRows.push(null);
                }
            }
            pagesArr.push(pageRows);
        }
        return pagesArr;
    }
    /**
     * @param {?} rowCount
     * @param {?} dataLength
     * @return {?}
     */
    getRows(rowCount, dataLength) {
        /** @type {?} */
        const columnNum = this.columnNum;
        /** @type {?} */
        const rowArr = new Array();
        for (let i = 0; i < rowCount; i++) {
            rowArr[i] = new Array();
            for (let j = 0; j < columnNum; j++) {
                /** @type {?} */
                const dataIndex = i * columnNum + j;
                if (dataIndex < dataLength) {
                    rowArr[i][j] = this._data[dataIndex];
                }
                else {
                    rowArr[i][j] = null;
                }
            }
        }
        return rowArr;
    }
    /**
     * @param {?} data
     * @param {?} index
     * @return {?}
     */
    click(data, index) {
        /** @type {?} */
        const outputData = {
            data: data,
            index: index
        };
        this.onClick.emit(outputData);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.itemCls = {
            [`${this.defaultProps.prefixCls}-item`]: true,
            [`${this.defaultProps.prefixCls}-active-item`]: false
        };
    }
}
GridComponent.decorators = [
    { type: Component, args: [{
                selector: 'Grid, nzm-grid',
                template: "<ng-container *ngIf=\"!isCarousel\">\n  <Flex *ngFor=\"let item of gridData; let i = index;\"\n        [justify]=\"'center'\"\n        [align]=\"'stretch'\"\n  >\n    <FlexItem TouchFeedbackDirective\n              *ngFor=\"let subItem of item; let j = index;\"\n              [ngClass]=\"itemCls\"\n              [ngStyle]=\"itemStyle\"\n              [className]=\"['am-grid-item-active']\"\n              [activeStyle]=\"activeStyle\"\n    >\n      <div *ngIf=\"subItem !== null\"\n           class=\"{{defaultProps.prefixCls}}-item-content\"\n           (click)=\"click(subItem,i * columnNum + j)\"\n      >\n        <div class=\"{{defaultProps.prefixCls}}-item-inner-content column-num-{{columnNum}}\">\n          <img *ngIf=\"subItem.icon && getContentType(subItem.icon) === 'url'\"\n               src=\"{{subItem.icon}}\"\n               class=\"{{defaultProps.prefixCls}}-icon\"\n          >\n          <Icon *ngIf=\"subItem.icon && getContentType(subItem.icon)==='icon'\"\n                [type]=\"subItem.icon\"\n                [size]=\"subItem.size\"\n          ></Icon>\n          <div *ngIf=\"subItem.icon && getContentType(subItem.icon)==='innerHTML'\" [innerHTML]=\"subItem.icon | safeHTML\"></div>\n          <ng-template *ngIf=\"subItem.icon && getContentType(subItem.icon)==='TemplateRef'\" [ngTemplateOutlet]=\"subItem.icon\"></ng-template>\n          <div class=\"{{defaultProps.prefixCls}}-text\">{{subItem.text}}</div>\n        </div>\n      </div>\n      <div *ngIf=\"subItem === null\" class=\"{{defaultProps.prefixCls}}-null-item\"></div>\n    </FlexItem>\n  </Flex>\n  <ng-content></ng-content>\n</ng-container>\n\n<Carousel *ngIf=\"isCarousel && carouselDataTmp.length > 0\"\n          [autoplay]=\"false\"\n          [infinite]=\"true\"\n          [selectedIndex]=\"0\"\n          [autoplayInterval]='3000'\n          [dots]=\"carouselProps.dots\"\n          [dragging]=\"carouselProps.dragging\"\n>\n  <CarouselSlide *ngFor=\"let gridData of carouselDataTmp\"\n                 class=\"{{defaultProps.prefixCls}}-carousel-page\"\n                 style=\"display: block;\"\n  >\n    <Flex *ngFor=\"let item of gridData; let i = index;\"\n          [justify]=\"'center'\"\n          [align]=\"'stretch'\"\n    >\n      <FlexItem TouchFeedbackDirective\n                *ngFor=\"let subItem of item; let j = index;\"\n                class=\"{{defaultProps.prefixCls}}-item\"\n                [ngStyle]=\"itemStyle\"\n                [className]=\"['am-grid-item-active']\"\n      >\n        <div *ngIf=\"subItem !== null\"\n             class=\"{{defaultProps.prefixCls}}-item-content\"\n             (click)=\"click(subItem,i * columnNum + j)\"\n        >\n          <div class=\"{{defaultProps.prefixCls}}-item-inner-content column-num-4\">\n            <img class=\"{{defaultProps.prefixCls}}-icon\" src=\"{{subItem.icon}}\">\n            <div class=\"{{defaultProps.prefixCls}}-text\">{{subItem.text}}</div>\n          </div>\n        </div>\n        <div *ngIf=\"subItem === null\" class=\"{{defaultProps.prefixCls}}-null-item\"></div>\n      </FlexItem>\n    </Flex>\n  </CarouselSlide>\n</Carousel>"
            }] }
];
/** @nocollapse */
GridComponent.ctorParameters = () => [];
GridComponent.propDecorators = {
    columnNum: [{ type: Input }],
    carouselMaxRow: [{ type: Input }],
    itemStyle: [{ type: Input }],
    square: [{ type: Input }],
    hasLine: [{ type: Input }],
    isCarousel: [{ type: Input }],
    activeStyle: [{ type: Input }],
    data: [{ type: Input }],
    onClick: [{ type: Output }],
    amGrid: [{ type: HostBinding, args: ['class.am-grid',] }],
    amGridSquare: [{ type: HostBinding, args: ['class.am-grid-square',] }],
    amGridLine: [{ type: HostBinding, args: ['class.am-grid-line',] }],
    amGridCarousel: [{ type: HostBinding, args: ['class.am-grid-carousel',] }]
};
if (false) {
    /** @type {?} */
    GridComponent.prototype.wrapCls;
    /** @type {?} */
    GridComponent.prototype.itemCls;
    /** @type {?} */
    GridComponent.prototype.carouselProps;
    /** @type {?} */
    GridComponent.prototype.defaultProps;
    /** @type {?} */
    GridComponent.prototype.carouselData;
    /** @type {?} */
    GridComponent.prototype.carouselDataTmp;
    /** @type {?} */
    GridComponent.prototype.gridData;
    /**
     * @type {?}
     * @private
     */
    GridComponent.prototype._data;
    /** @type {?} */
    GridComponent.prototype.columnNum;
    /** @type {?} */
    GridComponent.prototype.carouselMaxRow;
    /** @type {?} */
    GridComponent.prototype.itemStyle;
    /** @type {?} */
    GridComponent.prototype.square;
    /** @type {?} */
    GridComponent.prototype.hasLine;
    /** @type {?} */
    GridComponent.prototype.activeStyle;
    /** @type {?} */
    GridComponent.prototype.onClick;
    /** @type {?} */
    GridComponent.prototype.amGrid;
}
//# sourceMappingURL=data:application/json;base64,