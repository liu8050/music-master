/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, HostBinding, TemplateRef } from '@angular/core';
export class ListComponent {
    constructor() {
        this.defaultProps = {
            prefixCls: 'am-list'
        };
        this.renderHeaderType = '';
        this.renderFooterType = '';
        this._renderHeader = '';
        this._renderFooter = '';
        this._className = '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set className(value) {
        this._className = value;
    }
    /**
     * @return {?}
     */
    get renderHeader() {
        return this._renderHeader;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set renderHeader(value) {
        if (value instanceof TemplateRef) {
            this.renderHeaderType = 'templateRef';
        }
        else {
            this.renderHeaderType = typeof value;
        }
        console.log('this isi rend', this.renderHeaderType);
        this._renderHeader = value;
    }
    /**
     * @return {?}
     */
    get renderFooter() {
        return this._renderFooter;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set renderFooter(value) {
        if (value instanceof TemplateRef) {
            this.renderFooterType = 'templateRef';
        }
        else {
            this.renderFooterType = typeof value;
        }
        this._renderFooter = value;
    }
    /**
     * @return {?}
     */
    get hostClassName() {
        return 'am-list ' + this._className;
    }
}
ListComponent.decorators = [
    { type: Component, args: [{
                selector: 'List, nzm-list',
                template: "<div *ngIf=\"renderHeader && renderHeaderType === 'string'\"\n     class=\"{{defaultProps.prefixCls}}-header\"\n     [innerHTML]=\"renderHeader\">\n</div>\n<div *ngIf=\"renderHeader && renderHeaderType === 'function'\"\n     class=\"{{defaultProps.prefixCls}}-header\">{{renderHeader()}}\n</div>\n<ng-template *ngIf=\"renderHeader && renderHeaderType === 'templateRef'\" [ngTemplateOutlet]=\"renderHeader\">\n</ng-template>\n<div class=\"{{defaultProps.prefixCls}}-body\">\n  <ng-content></ng-content>\n</div>\n<div *ngIf=\"renderFooter && renderFooterType === 'string'\"\n     class=\"{{defaultProps.prefixCls}}-footer\"\n     [innerHTML]=\"renderFooter\">\n</div>\n<div *ngIf=\"renderFooter && renderFooterType === 'function'\"\n     class=\"{{defaultProps.prefixCls}}-footer\">{{renderFooter()}}\n</div>\n<ng-template *ngIf=\"renderFooter && renderFooterType === 'templateRef'\" [ngTemplateOutlet]=\"renderFooter\">\n</ng-template>\n",
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
ListComponent.ctorParameters = () => [];
ListComponent.propDecorators = {
    className: [{ type: Input }],
    renderHeader: [{ type: Input }],
    renderFooter: [{ type: Input }],
    hostClassName: [{ type: HostBinding, args: ['class',] }]
};
if (false) {
    /** @type {?} */
    ListComponent.prototype.defaultProps;
    /** @type {?} */
    ListComponent.prototype.renderHeaderType;
    /** @type {?} */
    ListComponent.prototype.renderFooterType;
    /**
     * @type {?}
     * @private
     */
    ListComponent.prototype._renderHeader;
    /**
     * @type {?}
     * @private
     */
    ListComponent.prototype._renderFooter;
    /**
     * @type {?}
     * @private
     */
    ListComponent.prototype._className;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbImxpc3QvbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPOUYsTUFBTSxPQUFPLGFBQWE7SUFpRHhCO1FBaERBLGlCQUFZLEdBQVE7WUFDbEIsU0FBUyxFQUFFLFNBQVM7U0FDckIsQ0FBQztRQUVGLHFCQUFnQixHQUFXLEVBQUUsQ0FBQztRQUM5QixxQkFBZ0IsR0FBVyxFQUFFLENBQUM7UUFFdEIsa0JBQWEsR0FBUSxFQUFFLENBQUM7UUFDeEIsa0JBQWEsR0FBUSxFQUFFLENBQUM7UUFDeEIsZUFBVSxHQUFXLEVBQUUsQ0FBQztJQXVDakIsQ0FBQzs7Ozs7SUFyQ2hCLElBQ0ksU0FBUyxDQUFDLEtBQUs7UUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDMUIsQ0FBQzs7OztJQUNELElBQ0ksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDOzs7OztJQUNELElBQUksWUFBWSxDQUFDLEtBQTJDO1FBQzFELElBQUksS0FBSyxZQUFZLFdBQVcsRUFBRTtZQUNoQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsYUFBYSxDQUFDO1NBQ3ZDO2FBQU07WUFDTCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsT0FBTyxLQUFLLENBQUM7U0FDdEM7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUVwRCxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDOzs7O0lBQ0QsSUFDSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7Ozs7O0lBQ0QsSUFBSSxZQUFZLENBQUMsS0FBMkM7UUFDMUQsSUFBSSxLQUFLLFlBQVksV0FBVyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxhQUFhLENBQUM7U0FDdkM7YUFBTTtZQUNMLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxPQUFPLEtBQUssQ0FBQztTQUN0QztRQUVELElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCxJQUNJLGFBQWE7UUFDZixPQUFPLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3RDLENBQUM7OztZQXBERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIsbzdCQUFvQztnQkFDcEMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7YUFDdEM7Ozs7O3dCQWFFLEtBQUs7MkJBSUwsS0FBSzsyQkFjTCxLQUFLOzRCQWNMLFdBQVcsU0FBQyxPQUFPOzs7O0lBM0NwQixxQ0FFRTs7SUFFRix5Q0FBOEI7O0lBQzlCLHlDQUE4Qjs7Ozs7SUFFOUIsc0NBQWdDOzs7OztJQUNoQyxzQ0FBZ0M7Ozs7O0lBQ2hDLG1DQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0LCBIb3N0QmluZGluZywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnTGlzdCwgbnptLWxpc3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgTGlzdENvbXBvbmVudCB7XG4gIGRlZmF1bHRQcm9wczogYW55ID0ge1xuICAgIHByZWZpeENsczogJ2FtLWxpc3QnXG4gIH07XG5cbiAgcmVuZGVySGVhZGVyVHlwZTogc3RyaW5nID0gJyc7XG4gIHJlbmRlckZvb3RlclR5cGU6IHN0cmluZyA9ICcnO1xuXG4gIHByaXZhdGUgX3JlbmRlckhlYWRlcjogYW55ID0gJyc7XG4gIHByaXZhdGUgX3JlbmRlckZvb3RlcjogYW55ID0gJyc7XG4gIHByaXZhdGUgX2NsYXNzTmFtZTogc3RyaW5nID0gJyc7XG5cbiAgQElucHV0KClcbiAgc2V0IGNsYXNzTmFtZSh2YWx1ZSkge1xuICAgIHRoaXMuX2NsYXNzTmFtZSA9IHZhbHVlO1xuICB9XG4gIEBJbnB1dCgpXG4gIGdldCByZW5kZXJIZWFkZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlbmRlckhlYWRlcjtcbiAgfVxuICBzZXQgcmVuZGVySGVhZGVyKHZhbHVlOiBzdHJpbmcgfCBGdW5jdGlvbiB8IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBUZW1wbGF0ZVJlZikge1xuICAgICAgdGhpcy5yZW5kZXJIZWFkZXJUeXBlID0gJ3RlbXBsYXRlUmVmJztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW5kZXJIZWFkZXJUeXBlID0gdHlwZW9mIHZhbHVlO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZygndGhpcyBpc2kgcmVuZCcsIHRoaXMucmVuZGVySGVhZGVyVHlwZSk7XG5cbiAgICB0aGlzLl9yZW5kZXJIZWFkZXIgPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgcmVuZGVyRm9vdGVyKCkge1xuICAgIHJldHVybiB0aGlzLl9yZW5kZXJGb290ZXI7XG4gIH1cbiAgc2V0IHJlbmRlckZvb3Rlcih2YWx1ZTogc3RyaW5nIHwgRnVuY3Rpb24gfCBUZW1wbGF0ZVJlZjxhbnk+KSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgVGVtcGxhdGVSZWYpIHtcbiAgICAgIHRoaXMucmVuZGVyRm9vdGVyVHlwZSA9ICd0ZW1wbGF0ZVJlZic7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVuZGVyRm9vdGVyVHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgICB9XG5cbiAgICB0aGlzLl9yZW5kZXJGb290ZXIgPSB2YWx1ZTtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICBnZXQgaG9zdENsYXNzTmFtZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnYW0tbGlzdCAnICsgdGhpcy5fY2xhc3NOYW1lO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7fVxufVxuIl19