/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostListener, Input, Output, TemplateRef, EventEmitter, ViewEncapsulation, forwardRef } from '@angular/core';
import { ModalOptions } from './modal-options.provider';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
export class ModalComponent {
    /**
     * @param {?} option
     */
    constructor(option) {
        this.option = option;
        this.autoFocus = { focus: true, date: new Date() };
        this.transitionName = '';
        this.maskTransitionName = '';
        this.wrapCls = {};
        this.cls = {};
        this.btnGroupClass = {};
        this.data = {
            text: '',
            password: ''
        };
        this.onClose = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get title() {
        return this.option.title;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set title(value) {
        this.option.title = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set closable(value) {
        this.option.closable = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set maskClosable(value) {
        this.option.maskClosable = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set popup(value) {
        this.option.popup = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set animationType(value) {
        this.option.animationType = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set transparent(value) {
        this.option.transparent = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set footer(value) {
        this.option.footer = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set platform(value) {
        this.option.platform = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set className(value) {
        this.option.className = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set wrapClassName(value) {
        this.option.wrapClassName = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set actions(value) {
        this.option.footer = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set defaultValue(value) {
        this.option.defaultValue = value !== undefined ? value : ['', ''];
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set type(value) {
        this.option.type = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set placeholders(value) {
        this.option.placeholders = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set operation(value) {
        this.option.operation = value;
        this.setClassMap();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    panend(event) {
        if (this.option.closable || this.option.maskClosable || this.option.popup) {
            if ((event && event.target && event.target.getAttribute('role') === 'dialog') ||
                event.target.getAttribute('role') === 'close') {
                if (this.option.close) {
                    this.option.close();
                }
                else {
                    this.onClose.emit();
                    this.leaveAnimation();
                }
            }
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    isTemplateRef(value) {
        return value instanceof TemplateRef;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    isNoTitle(value) {
        return value === '' || value === null || value === undefined;
    }
    /**
     * @param {?} visible
     * @return {?}
     */
    setTransitionName(visible) {
        if (!visible) {
            this.leaveAnimation();
        }
        else {
            if (this.option.animated) {
                if (this.option.transparent) {
                    if (this.setActiveName(this.option.transitionName)) {
                        this.transitionName = this.setActiveName(this.option.transitionName);
                        this.maskTransitionName = this.setActiveName(this.option.maskTransitionName);
                    }
                    else {
                        this.transitionName = this.maskTransitionName = this.setActiveName('am-fade');
                    }
                }
                else {
                    if (this.setActiveName(this.option.transitionName)) {
                        this.transitionName = this.setActiveName(this.option.transitionName);
                        this.maskTransitionName = this.setActiveName(this.option.maskTransitionName);
                    }
                    else {
                        this.transitionName = this.maskTransitionName = this.setActiveName('am-slide-up');
                    }
                }
                if (this.option.popup) {
                    this.transitionName =
                        this.option.animationType === 'slide-up'
                            ? this.setActiveName('am-slide-up')
                            : this.setActiveName('am-slide-down');
                    this.maskTransitionName = this.setActiveName('am-fade');
                }
            }
            this.setClassMap();
        }
    }
    /**
     * @param {?} name
     * @return {?}
     */
    setActiveName(name) {
        return name.length > 0 ? `${name}-enter ${name}-enter-active` : null;
    }
    /**
     * @param {?} name
     * @return {?}
     */
    setLeaveActiveName(name) {
        return name.length > 0 ? `${name}-leave ${name}-leave-active` : null;
    }
    /**
     * @return {?}
     */
    setClassMap() {
        this.wrapCls = {
            [this.option.wrapClassName]: true,
            [`${this.option.prefixCls}-wrap-popup`]: this.option.popup
        };
        this.cls = {
            [this.option.className]: true,
            [`${this.option.prefixCls}-transparent`]: this.option.transparent,
            [`${this.option.prefixCls}-popup`]: this.option.popup,
            [`${this.option.prefixCls}-popup-${this.option.animationType}`]: this.option.popup && this.option.animationType,
            [`${this.option.prefixCls}-android`]: this.option.platform === 'android'
        };
        this.btnGroupClass = {
            [`${this.option.prefixCls}-button-group-${this.option.footer.length === 2 && !this.option.operation ? 'h' : 'v'}`]: true,
            [`${this.option.prefixCls}-button-group-${this.option.operation ? 'operation' : 'normal'}`]: true
        };
    }
    /**
     * @param {?} type
     * @param {?} value
     * @return {?}
     */
    inputChange(type, value) {
        this.data[type] = value;
    }
    /**
     * @return {?}
     */
    leaveAnimation() {
        if (this.option.animated) {
            if (this.option.transparent) {
                if (this.setLeaveActiveName(this.option.transitionName)) {
                    this.transitionName = this.setLeaveActiveName(this.option.transitionName);
                    this.maskTransitionName = this.setLeaveActiveName(this.option.maskTransitionName);
                }
                else {
                    this.transitionName = this.maskTransitionName = this.setLeaveActiveName('am-fade');
                }
            }
            else {
                if (this.setLeaveActiveName(this.option.transitionName)) {
                    this.transitionName = this.setLeaveActiveName(this.option.transitionName);
                    this.maskTransitionName = this.setLeaveActiveName(this.option.maskTransitionName);
                }
                else {
                    this.transitionName = this.maskTransitionName = this.setLeaveActiveName('am-slide-up');
                }
            }
            if (this.option.popup) {
                this.transitionName =
                    this.option.animationType === 'slide-up'
                        ? this.setLeaveActiveName('am-slide-up')
                        : this.setLeaveActiveName('am-slide-down');
                this.maskTransitionName = this.setLeaveActiveName('am-fade');
            }
        }
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.option.visible = false;
            this.onChanged(this.option.visible);
        }), 200);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        if (value) {
            this.option.visible = value;
        }
        this.setTransitionName(value);
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChanged = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
}
ModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'Modal',
                template: "<div *ngIf=\"option.visible\">\n  <div class=\"{{option.prefixCls}}-mask {{maskTransitionName}}\"></div>\n  <div role=\"dialog\"\n       class=\"{{option.prefixCls}}-wrap {{transitionName}}\"\n       [ngClass]=\"wrapCls\"\n  >\n    <div role=\"document\"\n         class=\"{{option.prefixCls}}\"\n         [ngClass]=\"cls\"\n    >\n      <div class=\"{{option.prefixCls}}-content\">\n        <div  *ngIf=\"option.closable\" style=\"width: 100%; height: 21px;\">\n          <div role=\"close\"\n               class=\"{{option.prefixCls}}-close\"\n        >\n            <span role=\"close\" class=\"{{option.prefixCls}}-close-x\"></span>\n          </div>\n        </div>\n        <div *ngIf=\"!isNoTitle(option.title)\" class=\"{{option.prefixCls}}-header\">\n          <div *ngIf=\"!isTemplateRef(option.title)\" class=\"{{option.prefixCls}}-title\">{{option.title}}</div>\n          <ng-template *ngIf=\"isTemplateRef(option.title)\" [ngTemplateOutlet]=\"option.title\"></ng-template>\n        </div>\n        <div class=\"{{option.prefixCls}}-body\">\n          <ng-content></ng-content>\n          <div *ngIf=\"!isTemplateRef(option.message)\" class=\"{{option.prefixCls}}-alert-content\">{{option.message}}</div>\n          <ng-template *ngIf=\"isTemplateRef(option.message)\" [ngTemplateOutlet]=\"option.message\"></ng-template>\n          <ng-template *ngIf=\"option.type === 'default'\" [ngTemplateOutlet]=\"promptDefault\"></ng-template>\n          <ng-template *ngIf=\"option.type === 'secure-text'\" [ngTemplateOutlet]=\"promptSecure\"></ng-template>\n          <ng-template *ngIf=\"option.type === 'login-password'\" [ngTemplateOutlet]=\"promptPassword\"></ng-template>\n        </div>\n        <div class=\"{{option.prefixCls}}-footer\">\n          <div [ngClass]=\"btnGroupClass\" role=\"group\">\n            <div Button\n                 role=\"button\"\n                 *ngFor=\"let button of option.footer\"\n                 [className]=\"'am-modal-button'\"\n                 [ngStyle]=\"button.style\"\n                 (onClick)=\"button.onPress()\"\n            >\n              {{button.text}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #promptPassword>\n  <div class=\"{{option.prefixCls}}-input-container\">\n    <div class=\"{{option.prefixCls}}-input\">\n        <input\n          #inputElement\n          autofocus\n          [type]=\"'text'\"\n          [placeholder]=\"option.placeholders[0] || ''\"\n          [(ngModel)]=\"option.defaultValue[0]\"\n          (ngModelChange)=\"inputChange('text', $event)\"\n        >\n    </div>\n    <div className=\"{{option.prefixCls}}-input\">\n        <input\n          #inputElement\n          [type]=\"'password'\"\n          [placeholder]=\"option.placeholders[1] || ''\"\n          [(ngModel)]=\"option.defaultValue[1]\"\n          (ngModelChange)=\"inputChange('password', $event)\"\n        >\n    </div>\n  </div>\n</ng-template>\n<ng-template #promptSecure>\n  <div className=\"{{option.prefixCls}}-input-container\">\n    <div className=\"{{option.prefixCls}}-input\">\n        <input\n          #inputElement\n          autofocus\n          [type]=\"'password'\"\n          [placeholder]=\"option.placeholders[0] || ''\"\n          [(ngModel)]=\"option.defaultValue[0]\"\n          (ngModelChange)=\"inputChange('password', $event)\"\n        >\n    </div>\n  </div>\n</ng-template>\n<ng-template #promptDefault>\n  <div className=\"{{option.prefixCls}}-input-container\">\n    <div className=\"{{option.prefixCls}}-input\">\n      <input\n        #inputElement\n        autofocus\n        [type]=\"'text'\"\n        [placeholder]=\"option.placeholders[0] || ''\"\n        [(ngModel)]=\"option.defaultValue[0]\"\n        (ngModelChange)=\"inputChange('text', $event)\"\n      >\n    </div>\n  </div>\n</ng-template>",
                encapsulation: ViewEncapsulation.None,
                providers: [
                    ModalOptions,
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => ModalComponent)),
                        multi: true
                    }
                ]
            }] }
];
/** @nocollapse */
ModalComponent.ctorParameters = () => [
    { type: ModalOptions }
];
ModalComponent.propDecorators = {
    title: [{ type: Input }],
    closable: [{ type: Input }],
    maskClosable: [{ type: Input }],
    popup: [{ type: Input }],
    animationType: [{ type: Input }],
    transparent: [{ type: Input }],
    footer: [{ type: Input }],
    platform: [{ type: Input }],
    className: [{ type: Input }],
    wrapClassName: [{ type: Input }],
    actions: [{ type: Input }],
    defaultValue: [{ type: Input }],
    type: [{ type: Input }],
    placeholders: [{ type: Input }],
    operation: [{ type: Input }],
    onClose: [{ type: Output }],
    panend: [{ type: HostListener, args: ['mouseup', ['$event'],] }, { type: HostListener, args: ['touchend', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    ModalComponent.prototype.autoFocus;
    /** @type {?} */
    ModalComponent.prototype.transitionName;
    /** @type {?} */
    ModalComponent.prototype.maskTransitionName;
    /** @type {?} */
    ModalComponent.prototype.wrapCls;
    /** @type {?} */
    ModalComponent.prototype.cls;
    /** @type {?} */
    ModalComponent.prototype.btnGroupClass;
    /** @type {?} */
    ModalComponent.prototype.data;
    /** @type {?} */
    ModalComponent.prototype.onChanged;
    /** @type {?} */
    ModalComponent.prototype.onTouched;
    /** @type {?} */
    ModalComponent.prototype.onClose;
    /** @type {?} */
    ModalComponent.prototype.option;
}
export class ModalServiceComponent extends ModalComponent {
    /**
     * @param {?} option
     */
    constructor(option) {
        super(option);
        this.option = option;
        this.setTransitionName(this.option.visible);
    }
}
ModalServiceComponent.decorators = [
    { type: Component, args: [{
                selector: 'ModalService',
                template: "<div *ngIf=\"option.visible\">\n  <div class=\"{{option.prefixCls}}-mask {{maskTransitionName}}\"></div>\n  <div role=\"dialog\"\n       class=\"{{option.prefixCls}}-wrap {{transitionName}}\"\n       [ngClass]=\"wrapCls\"\n  >\n    <div role=\"document\"\n         class=\"{{option.prefixCls}}\"\n         [ngClass]=\"cls\"\n    >\n      <div class=\"{{option.prefixCls}}-content\">\n        <div  *ngIf=\"option.closable\" style=\"width: 100%; height: 21px;\">\n          <div role=\"close\"\n               class=\"{{option.prefixCls}}-close\"\n        >\n            <span role=\"close\" class=\"{{option.prefixCls}}-close-x\"></span>\n          </div>\n        </div>\n        <div *ngIf=\"!isNoTitle(option.title)\" class=\"{{option.prefixCls}}-header\">\n          <div *ngIf=\"!isTemplateRef(option.title)\" class=\"{{option.prefixCls}}-title\">{{option.title}}</div>\n          <ng-template *ngIf=\"isTemplateRef(option.title)\" [ngTemplateOutlet]=\"option.title\"></ng-template>\n        </div>\n        <div class=\"{{option.prefixCls}}-body\">\n          <ng-content></ng-content>\n          <div *ngIf=\"!isTemplateRef(option.message)\" class=\"{{option.prefixCls}}-alert-content\">{{option.message}}</div>\n          <ng-template *ngIf=\"isTemplateRef(option.message)\" [ngTemplateOutlet]=\"option.message\"></ng-template>\n          <ng-template *ngIf=\"option.type === 'default'\" [ngTemplateOutlet]=\"promptDefault\"></ng-template>\n          <ng-template *ngIf=\"option.type === 'secure-text'\" [ngTemplateOutlet]=\"promptSecure\"></ng-template>\n          <ng-template *ngIf=\"option.type === 'login-password'\" [ngTemplateOutlet]=\"promptPassword\"></ng-template>\n        </div>\n        <div class=\"{{option.prefixCls}}-footer\">\n          <div [ngClass]=\"btnGroupClass\" role=\"group\">\n            <div Button\n                 role=\"button\"\n                 *ngFor=\"let button of option.footer\"\n                 [className]=\"'am-modal-button'\"\n                 [ngStyle]=\"button.style\"\n                 (onClick)=\"button.onPress()\"\n            >\n              {{button.text}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #promptPassword>\n  <div class=\"{{option.prefixCls}}-input-container\">\n    <div class=\"{{option.prefixCls}}-input\">\n        <input\n          #inputElement\n          autofocus\n          [type]=\"'text'\"\n          [placeholder]=\"option.placeholders[0] || ''\"\n          [(ngModel)]=\"option.defaultValue[0]\"\n          (ngModelChange)=\"inputChange('text', $event)\"\n        >\n    </div>\n    <div className=\"{{option.prefixCls}}-input\">\n        <input\n          #inputElement\n          [type]=\"'password'\"\n          [placeholder]=\"option.placeholders[1] || ''\"\n          [(ngModel)]=\"option.defaultValue[1]\"\n          (ngModelChange)=\"inputChange('password', $event)\"\n        >\n    </div>\n  </div>\n</ng-template>\n<ng-template #promptSecure>\n  <div className=\"{{option.prefixCls}}-input-container\">\n    <div className=\"{{option.prefixCls}}-input\">\n        <input\n          #inputElement\n          autofocus\n          [type]=\"'password'\"\n          [placeholder]=\"option.placeholders[0] || ''\"\n          [(ngModel)]=\"option.defaultValue[0]\"\n          (ngModelChange)=\"inputChange('password', $event)\"\n        >\n    </div>\n  </div>\n</ng-template>\n<ng-template #promptDefault>\n  <div className=\"{{option.prefixCls}}-input-container\">\n    <div className=\"{{option.prefixCls}}-input\">\n      <input\n        #inputElement\n        autofocus\n        [type]=\"'text'\"\n        [placeholder]=\"option.placeholders[0] || ''\"\n        [(ngModel)]=\"option.defaultValue[0]\"\n        (ngModelChange)=\"inputChange('text', $event)\"\n      >\n    </div>\n  </div>\n</ng-template>",
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
ModalServiceComponent.ctorParameters = () => [
    { type: ModalOptions }
];
if (false) {
    /** @type {?} */
    ModalServiceComponent.prototype.option;
}
//# sourceMappingURL=data:application/json;base64,