/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding } from '@angular/core';
export class WhiteSpaceComponent {
    constructor() {
        this.prefixCls = 'am-whitespace';
        this.size = 'md';
        this.amWhiteSpace = true;
    }
    /**
     * @return {?}
     */
    get amWhitespaceXs() {
        return this.size === 'xs';
    }
    /**
     * @return {?}
     */
    get amWhitespaceSm() {
        return this.size === 'sm';
    }
    /**
     * @return {?}
     */
    get amWhitespaceMd() {
        return this.size === 'md';
    }
    /**
     * @return {?}
     */
    get amWhitespaceLg() {
        return this.size === 'lg';
    }
    /**
     * @return {?}
     */
    get amWhitespaceXl() {
        return this.size === 'xl';
    }
}
WhiteSpaceComponent.decorators = [
    { type: Component, args: [{
                selector: 'WhiteSpace, nzm-whitespace',
                template: ``
            }] }
];
/** @nocollapse */
WhiteSpaceComponent.ctorParameters = () => [];
WhiteSpaceComponent.propDecorators = {
    size: [{ type: Input }],
    amWhiteSpace: [{ type: HostBinding, args: ['class.am-whitespace',] }],
    amWhitespaceXs: [{ type: HostBinding, args: ['class.am-whitespace-xs',] }],
    amWhitespaceSm: [{ type: HostBinding, args: ['class.am-whitespace-sm',] }],
    amWhitespaceMd: [{ type: HostBinding, args: ['class.am-whitespace-md',] }],
    amWhitespaceLg: [{ type: HostBinding, args: ['class.am-whitespace-lg',] }],
    amWhitespaceXl: [{ type: HostBinding, args: ['class.am-whitespace-xl',] }]
};
if (false) {
    /** @type {?} */
    WhiteSpaceComponent.prototype.prefixCls;
    /** @type {?} */
    WhiteSpaceComponent.prototype.size;
    /** @type {?} */
    WhiteSpaceComponent.prototype.amWhiteSpace;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2hpdGUtc3BhY2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJ3aGl0ZS1zcGFjZS93aGl0ZS1zcGFjZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVE5RCxNQUFNLE9BQU8sbUJBQW1CO0lBNkI5QjtRQTVCQSxjQUFTLEdBQVcsZUFBZSxDQUFDO1FBR3BDLFNBQUksR0FBdUIsSUFBSSxDQUFDO1FBR2hDLGlCQUFZLEdBQVksSUFBSSxDQUFDO0lBc0JkLENBQUM7Ozs7SUFyQmhCLElBQ0ksY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO0lBQzVCLENBQUM7Ozs7SUFDRCxJQUNJLGNBQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztJQUM1QixDQUFDOzs7O0lBQ0QsSUFDSSxjQUFjO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUM7SUFDNUIsQ0FBQzs7OztJQUNELElBQ0ksY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO0lBQzVCLENBQUM7Ozs7SUFDRCxJQUNJLGNBQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztJQUM1QixDQUFDOzs7WUEvQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw0QkFBNEI7Z0JBQ3RDLFFBQVEsRUFBRSxFQUFFO2FBQ2I7Ozs7O21CQUlFLEtBQUs7MkJBR0wsV0FBVyxTQUFDLHFCQUFxQjs2QkFFakMsV0FBVyxTQUFDLHdCQUF3Qjs2QkFJcEMsV0FBVyxTQUFDLHdCQUF3Qjs2QkFJcEMsV0FBVyxTQUFDLHdCQUF3Qjs2QkFJcEMsV0FBVyxTQUFDLHdCQUF3Qjs2QkFJcEMsV0FBVyxTQUFDLHdCQUF3Qjs7OztJQXZCckMsd0NBQW9DOztJQUVwQyxtQ0FDZ0M7O0lBRWhDLDJDQUM2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCB0eXBlIFdoaXRlU3BhY2VTaXplVHlwZSA9ICd4cycgfCAnc20nIHwgJ21kJyB8ICdsZycgfCAneGwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdXaGl0ZVNwYWNlLCBuem0td2hpdGVzcGFjZScsXG4gIHRlbXBsYXRlOiBgYFxufSlcbmV4cG9ydCBjbGFzcyBXaGl0ZVNwYWNlQ29tcG9uZW50IHtcbiAgcHJlZml4Q2xzOiBzdHJpbmcgPSAnYW0td2hpdGVzcGFjZSc7XG5cbiAgQElucHV0KClcbiAgc2l6ZTogV2hpdGVTcGFjZVNpemVUeXBlID0gJ21kJztcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXdoaXRlc3BhY2UnKVxuICBhbVdoaXRlU3BhY2U6IGJvb2xlYW4gPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXdoaXRlc3BhY2UteHMnKVxuICBnZXQgYW1XaGl0ZXNwYWNlWHMoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gJ3hzJztcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXdoaXRlc3BhY2Utc20nKVxuICBnZXQgYW1XaGl0ZXNwYWNlU20oKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gJ3NtJztcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXdoaXRlc3BhY2UtbWQnKVxuICBnZXQgYW1XaGl0ZXNwYWNlTWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gJ21kJztcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXdoaXRlc3BhY2UtbGcnKVxuICBnZXQgYW1XaGl0ZXNwYWNlTGcoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gJ2xnJztcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXdoaXRlc3BhY2UteGwnKVxuICBnZXQgYW1XaGl0ZXNwYWNlWGwoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gJ3hsJztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge31cbn1cbiJdfQ==