/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, ViewEncapsulation, Input, ElementRef, ViewChild } from '@angular/core';
import { CalendarDatePickerBaseComponent } from './datepicker.base.component';
var CalendarDatePickerComponent = /** @class */ (function (_super) {
    tslib_1.__extends(CalendarDatePickerComponent, _super);
    function CalendarDatePickerComponent() {
        var _this = _super.call(this) || this;
        _this.transform = '';
        _this._initDelta = 0;
        _this._lastY = 0;
        _this._delta = _this._initDelta;
        _this.amCalendar = true;
        _this.datePicker = true;
        _this.genMonthComponent = (/**
         * @param {?=} data
         * @return {?}
         */
        function (data) {
            if (!data)
                return;
            return {
                monthData: data,
                locale: _this.props.locale,
                rowSize: _this.props.rowSize,
                onCellClick: _this.baseOnCellClick,
                getDateExtra: _this.props.getDateExtra,
                ref: (/**
                 * @param {?} dom
                 * @return {?}
                 */
                function (dom) {
                    data.componentRef = dom || data.componentRef || undefined;
                    data.updateLayout = (/**
                     * @return {?}
                     */
                    function () {
                        _this.computeHeight(data, dom);
                    });
                    data.updateLayout();
                })
            };
        });
        _this.computeHeight = (/**
         * @param {?} data
         * @param {?} singleMonth
         * @return {?}
         */
        function (data, singleMonth) {
            if (singleMonth && singleMonth.wrapperDivDOM) {
                if (!data.height && !singleMonth.wrapperDivDOM.clientHeight) {
                    setTimeout((/**
                     * @return {?}
                     */
                    function () { return _this.computeHeight(data, singleMonth); }), 500);
                    return;
                }
                data.height = singleMonth.wrapperDivDOM.clientHeight || data.height || 0;
                data.y = singleMonth.wrapperDivDOM.offsetTop || data.y || 0;
            }
        });
        _this.setLayout = (/**
         * @param {?} dom
         * @return {?}
         */
        function (dom) {
            if (dom) {
                var onLayout = _this.props.onLayout;
                onLayout && onLayout(dom.clientHeight);
                /** @type {?} */
                var scrollHandler_1 = _this.createOnScroll();
                dom.onscroll = (/**
                 * @param {?} evt
                 * @return {?}
                 */
                function (evt) {
                    scrollHandler_1({
                        client: dom.clientHeight,
                        full: ((/** @type {?} */ (evt.currentTarget))).clientHeight,
                        top: ((/** @type {?} */ (evt.currentTarget))).scrollTop
                    });
                });
            }
        });
        _this.setPanel = (/**
         * @param {?} dom
         * @return {?}
         */
        function (dom) {
            _this._panel = dom;
        });
        return _this;
    }
    Object.defineProperty(CalendarDatePickerComponent.prototype, "onCellClick", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.props.onCellClick = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDatePickerComponent.prototype, "endDate", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var oldProps = Object.assign({}, this.props);
            this.props.endDate = value;
            this.receiveProps(oldProps, this.props);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDatePickerComponent.prototype, "startDate", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var oldProps = Object.assign({}, this.props);
            this.props.startDate = value;
            this.receiveProps(oldProps, this.props);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDatePickerComponent.prototype, "propsData", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.props = tslib_1.__assign({}, this.props, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDatePickerComponent.prototype, "onSelectHasDisableDate", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.props.onSelectHasDisableDate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDatePickerComponent.prototype, "onLayout", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.props.onLayout = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    CalendarDatePickerComponent.prototype.onTouchStart = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this._lastY = event.touches[0].screenY || event.touches[0].pageY;
        this._delta = this._initDelta;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CalendarDatePickerComponent.prototype.onTouchMove = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var ele = event.currentTarget;
        /** @type {?} */
        var isReachTop = ele.scrollTop === 0;
        if (isReachTop) {
            this._delta = (event.touches[0].screenY || event.touches[0].pageY) - this._lastY;
            if (this._delta > 0) {
                event.preventDefault();
                if (this._delta > 80) {
                    this._delta = 80;
                }
            }
            else {
                this._delta = 0;
            }
            this.setTransform(this._panel.style, "translate3d(0," + this._delta + "px,0)");
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CalendarDatePickerComponent.prototype.onTouchEnd = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.onFinish();
    };
    /**
     * @return {?}
     */
    CalendarDatePickerComponent.prototype.onFinish = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this._delta > 40 && this.canLoadPrev()) {
            this.genMonthData(this.state.months[0].firstDate, -1);
            this.visibleMonth = this.state.months.slice(0, this.props.initalMonths);
            this.state.months.forEach((/**
             * @param {?} m
             * @return {?}
             */
            function (m) {
                m.updateLayout && m.updateLayout();
            }));
        }
        this.setTransform(this._panel.style, "translate3d(0,0,0)");
        this.setTransition(this._panel.style, '.3s');
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this._panel && _this.setTransition(_this._panel.style, '');
        }), 300);
    };
    /**
     * @param {?} nodeStyle
     * @param {?} value
     * @return {?}
     */
    CalendarDatePickerComponent.prototype.setTransform = /**
     * @param {?} nodeStyle
     * @param {?} value
     * @return {?}
     */
    function (nodeStyle, value) {
        this.transform = value;
        nodeStyle.transform = value;
        nodeStyle.webkitTransform = value;
    };
    /**
     * @param {?} nodeStyle
     * @param {?} value
     * @return {?}
     */
    CalendarDatePickerComponent.prototype.setTransition = /**
     * @param {?} nodeStyle
     * @param {?} value
     * @return {?}
     */
    function (nodeStyle, value) {
        nodeStyle.transition = value;
        nodeStyle.webkitTransition = value;
    };
    /**
     * @return {?}
     */
    CalendarDatePickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.init();
        this.setLayout(this.layoutDom.nativeElement);
        this.setPanel(this.panelDom.nativeElement);
    };
    CalendarDatePickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'CalendarDatePicker, nzm-calendar-date-picker',
                    template: "<CalendarWeekPanel [locale]=\"props.locale\"></CalendarWeekPanel>\n<div #layout\n     class=\"wrapper\"\n     style=\"overflow-x:hidden;overflow-y:visible;-webkit-overflow-scrolling:touch;\"\n     (touchstart)=\"onTouchStart($event)\"\n     (touchmove)=\"onTouchMove($event)\"\n     (touchend)=\"onTouchEnd($event)\"\n>\n  <div #panel [ngStyle]=\"{transform: transform}\">\n    <div *ngIf=\"canLoadPrev()\" class=\"load-tip\">{{props.locale.loadPrevMonth}}</div>\n    <div class=\"months\">\n      <CalendarSingleMonth *ngFor=\"let item of visibleMonth;let i = index;\"\n                   style=\"display: block;\"\n                   [data]=\"item.component\"\n      ></CalendarSingleMonth>\n    </div>\n  </div>\n</div>\n",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    CalendarDatePickerComponent.ctorParameters = function () { return []; };
    CalendarDatePickerComponent.propDecorators = {
        layoutDom: [{ type: ViewChild, args: ['layout',] }],
        panelDom: [{ type: ViewChild, args: ['panel',] }],
        onCellClick: [{ type: Input }],
        endDate: [{ type: Input }],
        startDate: [{ type: Input }],
        propsData: [{ type: Input }],
        onSelectHasDisableDate: [{ type: Input }],
        onLayout: [{ type: Input }],
        amCalendar: [{ type: HostBinding, args: ['class.am-calendar',] }],
        datePicker: [{ type: HostBinding, args: ['class.date-picker',] }]
    };
    return CalendarDatePickerComponent;
}(CalendarDatePickerBaseComponent));
export { CalendarDatePickerComponent };
if (false) {
    /** @type {?} */
    CalendarDatePickerComponent.prototype.transform;
    /**
     * @type {?}
     * @private
     */
    CalendarDatePickerComponent.prototype._panel;
    /**
     * @type {?}
     * @private
     */
    CalendarDatePickerComponent.prototype._initDelta;
    /**
     * @type {?}
     * @private
     */
    CalendarDatePickerComponent.prototype._lastY;
    /**
     * @type {?}
     * @private
     */
    CalendarDatePickerComponent.prototype._delta;
    /** @type {?} */
    CalendarDatePickerComponent.prototype.layoutDom;
    /** @type {?} */
    CalendarDatePickerComponent.prototype.panelDom;
    /** @type {?} */
    CalendarDatePickerComponent.prototype.amCalendar;
    /** @type {?} */
    CalendarDatePickerComponent.prototype.datePicker;
    /** @type {?} */
    CalendarDatePickerComponent.prototype.genMonthComponent;
    /** @type {?} */
    CalendarDatePickerComponent.prototype.computeHeight;
    /** @type {?} */
    CalendarDatePickerComponent.prototype.setLayout;
    /** @type {?} */
    CalendarDatePickerComponent.prototype.setPanel;
}
//# sourceMappingURL=data:application/json;base64,