/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, HostBinding } from '@angular/core';
var ProgressComponent = /** @class */ (function () {
    function ProgressComponent() {
        this.prefixCls = 'am-progress';
        this._percent = 0;
        this._exceedance = false;
        this.unfilled = true;
        this.position = 'fixed';
        this.barStyle = {};
        this.max = 100;
        this.amProgress = true;
        this.outer = true;
    }
    Object.defineProperty(ProgressComponent.prototype, "percent", {
        get: /**
         * @return {?}
         */
        function () {
            return this._percent;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._percent = value;
            if (value > 100) {
                this._exceedance = true;
            }
            else {
                this._exceedance = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this.percent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "fixOuter", {
        get: /**
         * @return {?}
         */
        function () {
            return 'fixed' === this.position;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "hideOuter", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.unfilled && !this._exceedance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "exceedance", {
        get: /**
         * @return {?}
         */
        function () {
            return this._exceedance;
        },
        enumerable: true,
        configurable: true
    });
    ProgressComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Progress, nzm-progress',
                    template: "<div class=\"{{prefixCls}}-bar\" [ngStyle]=\"barStyle\" [style.width.%]=\"(percent <= 100) ? percent : (10000 / percent)\"></div>",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    ProgressComponent.ctorParameters = function () { return []; };
    ProgressComponent.propDecorators = {
        unfilled: [{ type: Input }],
        position: [{ type: Input }],
        barStyle: [{ type: Input }],
        percent: [{ type: Input }],
        max: [{ type: HostBinding, args: ['attr.max',] }],
        value: [{ type: HostBinding, args: ['attr.value',] }],
        amProgress: [{ type: HostBinding, args: ['class.am-progress',] }],
        outer: [{ type: HostBinding, args: ['class.am-progress-outer',] }],
        fixOuter: [{ type: HostBinding, args: ['class.am-progress-fixed-outer',] }],
        hideOuter: [{ type: HostBinding, args: ['class.am-progress-hide-outer',] }],
        exceedance: [{ type: HostBinding, args: ['class.am-progress-exceedance',] }]
    };
    return ProgressComponent;
}());
export { ProgressComponent };
if (false) {
    /** @type {?} */
    ProgressComponent.prototype.prefixCls;
    /**
     * @type {?}
     * @private
     */
    ProgressComponent.prototype._percent;
    /**
     * @type {?}
     * @private
     */
    ProgressComponent.prototype._exceedance;
    /** @type {?} */
    ProgressComponent.prototype.unfilled;
    /** @type {?} */
    ProgressComponent.prototype.position;
    /** @type {?} */
    ProgressComponent.prototype.barStyle;
    /** @type {?} */
    ProgressComponent.prototype.max;
    /** @type {?} */
    ProgressComponent.prototype.amProgress;
    /** @type {?} */
    ProgressComponent.prototype.outer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJwcm9ncmVzcy9wcm9ncmVzcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdqRjtJQXNERTtRQWhEQSxjQUFTLEdBQVcsYUFBYSxDQUFDO1FBRTFCLGFBQVEsR0FBVyxDQUFDLENBQUM7UUFDckIsZ0JBQVcsR0FBWSxLQUFLLENBQUM7UUFHckMsYUFBUSxHQUFZLElBQUksQ0FBQztRQUV6QixhQUFRLEdBQWlCLE9BQU8sQ0FBQztRQUVqQyxhQUFRLEdBQVcsRUFBRSxDQUFDO1FBZXRCLFFBQUcsR0FBVyxHQUFHLENBQUM7UUFPbEIsZUFBVSxHQUFZLElBQUksQ0FBQztRQUUzQixVQUFLLEdBQVksSUFBSSxDQUFDO0lBY1AsQ0FBQztJQXJDaEIsc0JBQ0ksc0NBQU87Ozs7UUFEWDtZQUVFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN2QixDQUFDOzs7OztRQUNELFVBQVksS0FBYTtZQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztZQUN0QixJQUFJLEtBQUssR0FBRyxHQUFHLEVBQUU7Z0JBQ2YsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7YUFDekI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7YUFDMUI7UUFDSCxDQUFDOzs7T0FSQTtJQVlELHNCQUNJLG9DQUFLOzs7O1FBRFQ7WUFFRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7SUFNRCxzQkFDSSx1Q0FBUTs7OztRQURaO1lBRUUsT0FBTyxPQUFPLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNuQyxDQUFDOzs7T0FBQTtJQUNELHNCQUNJLHdDQUFTOzs7O1FBRGI7WUFFRSxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDN0MsQ0FBQzs7O09BQUE7SUFDRCxzQkFDSSx5Q0FBVTs7OztRQURkO1lBRUUsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzFCLENBQUM7OztPQUFBOztnQkFwREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLDZJQUF3QztvQkFDeEMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3RDOzs7OzsyQkFPRSxLQUFLOzJCQUVMLEtBQUs7MkJBRUwsS0FBSzswQkFFTCxLQUFLO3NCQWFMLFdBQVcsU0FBQyxVQUFVO3dCQUV0QixXQUFXLFNBQUMsWUFBWTs2QkFLeEIsV0FBVyxTQUFDLG1CQUFtQjt3QkFFL0IsV0FBVyxTQUFDLHlCQUF5QjsyQkFFckMsV0FBVyxTQUFDLCtCQUErQjs0QkFJM0MsV0FBVyxTQUFDLDhCQUE4Qjs2QkFJMUMsV0FBVyxTQUFDLDhCQUE4Qjs7SUFNN0Msd0JBQUM7Q0FBQSxBQXZERCxJQXVEQztTQWxEWSxpQkFBaUI7OztJQUM1QixzQ0FBa0M7Ozs7O0lBRWxDLHFDQUE2Qjs7Ozs7SUFDN0Isd0NBQXFDOztJQUVyQyxxQ0FDeUI7O0lBQ3pCLHFDQUNpQzs7SUFDakMscUNBQ3NCOztJQWN0QixnQ0FDa0I7O0lBTWxCLHVDQUMyQjs7SUFDM0Isa0NBQ3NCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiwgSW5wdXQsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgdHlwZSBQb3NpdGlvblR5cGUgPSAnbm9ybWFsJyB8ICdmaXhlZCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1Byb2dyZXNzLCBuem0tcHJvZ3Jlc3MnLFxuICB0ZW1wbGF0ZVVybDogJy4vcHJvZ3Jlc3MuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFByb2dyZXNzQ29tcG9uZW50IHtcbiAgcHJlZml4Q2xzOiBzdHJpbmcgPSAnYW0tcHJvZ3Jlc3MnO1xuXG4gIHByaXZhdGUgX3BlcmNlbnQ6IG51bWJlciA9IDA7XG4gIHByaXZhdGUgX2V4Y2VlZGFuY2U6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoKVxuICB1bmZpbGxlZDogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dCgpXG4gIHBvc2l0aW9uOiBQb3NpdGlvblR5cGUgPSAnZml4ZWQnO1xuICBASW5wdXQoKVxuICBiYXJTdHlsZTogb2JqZWN0ID0ge307XG4gIEBJbnB1dCgpXG4gIGdldCBwZXJjZW50KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3BlcmNlbnQ7XG4gIH1cbiAgc2V0IHBlcmNlbnQodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX3BlcmNlbnQgPSB2YWx1ZTtcbiAgICBpZiAodmFsdWUgPiAxMDApIHtcbiAgICAgIHRoaXMuX2V4Y2VlZGFuY2UgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9leGNlZWRhbmNlID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLm1heCcpXG4gIG1heDogbnVtYmVyID0gMTAwO1xuICBASG9zdEJpbmRpbmcoJ2F0dHIudmFsdWUnKVxuICBnZXQgdmFsdWUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5wZXJjZW50O1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS1wcm9ncmVzcycpXG4gIGFtUHJvZ3Jlc3M6IGJvb2xlYW4gPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXByb2dyZXNzLW91dGVyJylcbiAgb3V0ZXI6IGJvb2xlYW4gPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXByb2dyZXNzLWZpeGVkLW91dGVyJylcbiAgZ2V0IGZpeE91dGVyKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAnZml4ZWQnID09PSB0aGlzLnBvc2l0aW9uO1xuICB9XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcHJvZ3Jlc3MtaGlkZS1vdXRlcicpXG4gIGdldCBoaWRlT3V0ZXIoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICF0aGlzLnVuZmlsbGVkICYmICF0aGlzLl9leGNlZWRhbmNlO1xuICB9XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcHJvZ3Jlc3MtZXhjZWVkYW5jZScpXG4gIGdldCBleGNlZWRhbmNlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9leGNlZWRhbmNlO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7fVxufVxuIl19