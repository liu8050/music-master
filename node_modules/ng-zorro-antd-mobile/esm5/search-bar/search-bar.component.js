/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, Output, forwardRef, ElementRef, EventEmitter, ViewChild } from '@angular/core';
import { trigger, state, animate, transition, style } from '@angular/animations';
import { LocaleProviderService } from '../locale-provider/locale-provider.service';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var SearchBarComponent = /** @class */ (function () {
    function SearchBarComponent(_elementRef, _localeProvider) {
        var _a;
        this._elementRef = _elementRef;
        this._localeProvider = _localeProvider;
        this.prefixCls = 'am-search';
        this.cancelCls = (_a = {},
            _a[this.prefixCls + "-cancel"] = true,
            _a);
        this._defaultValue = '';
        this._value = '';
        this._placeholder = '';
        this._showCancelButton = false;
        this._disabled = false;
        this._focus = false;
        this._isSubmit = false;
        this._isCustomText = false;
        this._isClearClicking = false;
        this._blurFromOnClear = false;
        this.locale = {};
        this._unsubscribe$ = new Subject();
        this.onSubmit = new EventEmitter();
        this.onChange = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.onCancel = new EventEmitter();
        this.onClear = new EventEmitter();
        this.onChangeFn = (/**
         * @return {?}
         */
        function () { });
        this.onTouchFn = (/**
         * @return {?}
         */
        function () { });
    }
    Object.defineProperty(SearchBarComponent.prototype, "defaultValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._defaultValue = value;
            this._value = value;
            this.inputElementRef.nativeElement.value = this._value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._value = v || '';
            this.inputElementRef.nativeElement.value = this._value;
            this.setClass();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "placeholder", {
        get: /**
         * @return {?}
         */
        function () {
            return this._placeholder;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._placeholder = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "showCancelButton", {
        get: /**
         * @return {?}
         */
        function () {
            return this._showCancelButton;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._showCancelButton = value;
            this.setClass();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "cancelText", {
        get: /**
         * @return {?}
         */
        function () {
            return this._cancelText;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== undefined) {
                this._cancelText = value;
                this._isCustomText = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._disabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "maxLength", {
        get: /**
         * @return {?}
         */
        function () {
            return this._maxLength;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._maxLength = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "setFocus", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                if (value.focusValue) {
                    this._focus = true;
                    this.inputElementRef.nativeElement.focus();
                    this._blurFromOnClear = true;
                    this.onSearchbarFocus();
                }
                else {
                    this._blurFromOnClear = false;
                    this.onSearchbarBlur();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.setClass = /**
     * @return {?}
     */
    function () {
        var _a, _b, _c;
        this.wrapCls = (_a = {},
            _a["" + this.prefixCls] = true,
            _a[this.prefixCls + "-start"] = !!(this._focus || (this._value && this._value.length > 0)) && !this._disabled,
            _a);
        this.cancelCls = (_b = {},
            _b[this.prefixCls + "-cancel"] = true,
            _b[this.prefixCls + "-cancel-show"] = this._showCancelButton || this._focus || (this._value && this._value.length > 0),
            _b[this.prefixCls + "-cancel-anim"] = this._focus,
            _b);
        this.clearCls = (_c = {},
            _c[this.prefixCls + "-clear"] = this._value && this._value.length > 0,
            _c[this.prefixCls + "-clear-show"] = this._value && this._value.length > 0 && !this._isSubmit,
            _c[this.prefixCls + "-clear-active"] = this._isClearClicking,
            _c);
    };
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.setStyle = /**
     * @return {?}
     */
    function () {
        if (this._inputContainerRef.className.indexOf(this.prefixCls + "-start") > -1) {
            /** @type {?} */
            var realWidth = this._syntheticPhContainerRef.getBoundingClientRect().width;
            this._syntheticPhRef.style.width = Math.ceil(realWidth) + 'px';
            if (!this._showCancelButton) {
                this._rightBtnRef.style.marginRight = '0';
            }
        }
        else {
            this._syntheticPhRef.style.width = '100%';
            if (!this._showCancelButton) {
                this._rightBtnInitMarginLeft = window.getComputedStyle(this._rightBtnRef)['margin-left'];
                /** @type {?} */
                var btnMarginRight = this._rightBtnRef.offsetWidth + parseInt(this._rightBtnInitMarginLeft, 10);
                this._rightBtnRef.style.marginRight = '-' + btnMarginRight + 'px';
            }
        }
    };
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.onSearchbarBlur = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (!self._blurFromOnClear && self._value === '' && self._focus) {
                self._focus = false;
                self._value = '';
                self.onBlur.emit();
                self.setClass();
            }
            self._blurFromOnClear = false;
        }), 50);
    };
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.onSearchbarFocus = /**
     * @return {?}
     */
    function () {
        this._focus = true;
        this._isSubmit = false;
        this.onFocus.emit();
        this.setClass();
    };
    /**
     * @param {?} e
     * @return {?}
     */
    SearchBarComponent.prototype.onSearchbarChange = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this._focus = true;
        this._value = e;
        this.onChange.emit(e);
        this.onChangeFn(e);
        this.setClass();
    };
    /**
     * @param {?} e
     * @return {?}
     */
    SearchBarComponent.prototype.onSearchSubmit = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        e.preventDefault();
        this._value = e.target[0].value;
        this._isSubmit = true;
        this.onSubmit.emit(this._value);
        this.setClass();
        this._blurFromOnClear = true;
    };
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.onSearchbarCancel = /**
     * @return {?}
     */
    function () {
        this._focus = false;
        this._value = '';
        this.onCancel.emit();
        this.setClass();
    };
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.onSearchbarClear = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._blurFromOnClear = true;
        this._isClearClicking = true;
        this.onSearchbarChange('');
        this.inputElementRef.nativeElement.focus();
        this.onClear.emit(this._value);
        this.setClass();
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this._value = '';
            _this._isClearClicking = false;
            _this._blurFromOnClear = false;
            _this.setClass();
        }), 100);
        this.onSearchbarFocus();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    SearchBarComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this._value = value || '';
        this.inputElementRef.nativeElement.value = this._value;
        this.setClass();
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SearchBarComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChangeFn = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SearchBarComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouchFn = fn;
    };
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.setClass();
        this._localeProvider.localeChange.pipe(takeUntil(this._unsubscribe$)).subscribe((/**
         * @param {?} _
         * @return {?}
         */
        function (_) {
            _this.locale = _this._localeProvider.getLocaleSubObj('SearchBar');
            _this._cancelText = _this._isCustomText ? _this._cancelText : _this.locale.cancelText;
        }));
    };
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this._syntheticPhContainerRef = this._elementRef.nativeElement.getElementsByClassName(this.prefixCls + "-synthetic-ph-container")[0];
        this._syntheticPhRef = this._elementRef.nativeElement.getElementsByClassName(this.prefixCls + "-synthetic-ph")[0];
        this._rightBtnRef = this._elementRef.nativeElement.getElementsByClassName('cancel')[0];
        this._inputContainerRef = this._elementRef.nativeElement.getElementsByClassName("" + this.prefixCls)[0];
    };
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        this.setStyle();
    };
    /**
     * @return {?}
     */
    SearchBarComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._unsubscribe$.next();
        this._unsubscribe$.complete();
    };
    SearchBarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'SearchBar, nzm-search-bar',
                    template: "<form name=\"myForm\"\n      class=\"{{prefixCls}}\"\n      [ngClass]=\"wrapCls\"\n      action=\"#\"\n      (submit)=\"onSearchSubmit($event)\"\n>\n  <div class=\"{{prefixCls}}-input\">\n    <div class=\"{{prefixCls}}-synthetic-ph\"\n         style=\"box-sizing:unset\"\n         [@cancelButtonState]=\"showCancelButton?'visible' : 'hidden'\"\n    >\n      <span class=\"{{prefixCls}}-synthetic-ph-container\">\n        <i class=\"{{prefixCls}}-synthetic-ph-icon\"></i>\n        <span class=\"{{prefixCls}}-synthetic-ph-placeholder\"\n              [ngStyle]=\"{'visibility' : (placeholder && !value) ? 'visible' : 'hidden'}\"\n        >\n          {{placeholder}}\n        </span>\n      </span>\n    </div>\n    <input #search\n           class=\"{{prefixCls}}-value\"\n           style=\"outline:none;\"\n           [name]=\"'search'\"\n           [type]=\"'search'\"\n           [disabled]=\"disabled\"\n           [maxlength]=\"maxLength\"\n           [placeholder]=\"placeholder\"\n           [ngModel]=\"value\"\n           (blur)=\"onSearchbarBlur()\"\n           (focus)=\"onSearchbarFocus()\"\n           (ngModelChange)=\"onSearchbarChange($event)\"\n    />\n    <a [ngClass]=\"clearCls\"\n       style=\"box-sizing: content-box;transition: 0s\"\n       (click)=\"onSearchbarClear()\"\n    ></a>\n  </div>\n  <div class=\"cancel\"\n       [ngClass]=\"cancelCls\"\n       (click)=\"onSearchbarCancel()\"\n  >\n    {{cancelText}}\n  </div>\n</form>",
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return SearchBarComponent; })),
                            multi: true
                        }
                    ],
                    animations: [
                        trigger('cancelButtonState', [
                            state('visible', style({ width: '*' })),
                            state('hidden', style({ width: '100%' })),
                            transition('visible =>hidden', [animate(300, style({ width: '100%' }))]),
                            transition('hidden => visible', [animate(300, style({ width: '*' }))])
                        ])
                    ]
                }] }
    ];
    /** @nocollapse */
    SearchBarComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: LocaleProviderService }
    ]; };
    SearchBarComponent.propDecorators = {
        inputElementRef: [{ type: ViewChild, args: ['search',] }],
        defaultValue: [{ type: Input }],
        value: [{ type: Input }],
        placeholder: [{ type: Input }],
        showCancelButton: [{ type: Input }],
        cancelText: [{ type: Input }],
        disabled: [{ type: Input }],
        maxLength: [{ type: Input }],
        setFocus: [{ type: Input }],
        onSubmit: [{ type: Output }],
        onChange: [{ type: Output }],
        onFocus: [{ type: Output }],
        onBlur: [{ type: Output }],
        onCancel: [{ type: Output }],
        onClear: [{ type: Output }]
    };
    return SearchBarComponent;
}());
export { SearchBarComponent };
if (false) {
    /** @type {?} */
    SearchBarComponent.prototype.prefixCls;
    /** @type {?} */
    SearchBarComponent.prototype.clearCls;
    /** @type {?} */
    SearchBarComponent.prototype.wrapCls;
    /** @type {?} */
    SearchBarComponent.prototype.cancelCls;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._defaultValue;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._value;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._placeholder;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._showCancelButton;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._cancelText;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._maxLength;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._focus;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._isSubmit;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._isCustomText;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._isClearClicking;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._syntheticPhContainerRef;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._syntheticPhRef;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._rightBtnRef;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._inputContainerRef;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._rightBtnInitMarginLeft;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._blurFromOnClear;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype.locale;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._unsubscribe$;
    /** @type {?} */
    SearchBarComponent.prototype.inputElementRef;
    /** @type {?} */
    SearchBarComponent.prototype.onSubmit;
    /** @type {?} */
    SearchBarComponent.prototype.onChange;
    /** @type {?} */
    SearchBarComponent.prototype.onFocus;
    /** @type {?} */
    SearchBarComponent.prototype.onBlur;
    /** @type {?} */
    SearchBarComponent.prototype.onCancel;
    /** @type {?} */
    SearchBarComponent.prototype.onClear;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype.onChangeFn;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype.onTouchFn;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._elementRef;
    /**
     * @type {?}
     * @private
     */
    SearchBarComponent.prototype._localeProvider;
}
//# sourceMappingURL=data:application/json;base64,