/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';
var TagComponent = /** @class */ (function () {
    function TagComponent() {
        this.prefixCls = 'am-tag';
        this.closed = false;
        this.wrapCls = {};
        this._small = false;
        this._closable = false;
        this._selected = false;
        this._disabled = false;
        this.onChange = new EventEmitter();
        this.onClose = new EventEmitter();
        this.afterClose = new EventEmitter();
    }
    Object.defineProperty(TagComponent.prototype, "small", {
        get: /**
         * @return {?}
         */
        function () {
            return this._small;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._small = v;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TagComponent.prototype, "closable", {
        get: /**
         * @return {?}
         */
        function () {
            return this._closable;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._closable = v;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TagComponent.prototype, "selected", {
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._selected = v;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TagComponent.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._disabled = v;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TagComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        if (this._disabled) {
            return;
        }
        this._selected = !this._selected;
        this.onChange.emit(this._selected);
        this.setClassMap();
    };
    /**
     * @return {?}
     */
    TagComponent.prototype.onTagClose = /**
     * @return {?}
     */
    function () {
        this.onClose.emit();
        this.closed = true;
        this.afterClose.emit();
    };
    /**
     * @return {?}
     */
    TagComponent.prototype.setClassMap = /**
     * @return {?}
     */
    function () {
        var _a;
        this.wrapCls = (_a = {},
            _a[this.prefixCls] = true,
            _a[this.prefixCls + "-normal"] = !this._disabled && (!this._selected || this._small || this._closable),
            _a[this.prefixCls + "-small"] = this._small,
            _a[this.prefixCls + "-active"] = this._selected && !this._disabled && !this._small && !this._closable,
            _a[this.prefixCls + "-disabled"] = this._disabled,
            _a[this.prefixCls + "-closable"] = this._closable,
            _a);
    };
    /**
     * @return {?}
     */
    TagComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.setClassMap();
    };
    TagComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Tag, nzm-tag',
                    template: "<div *ngIf=\"!closed\" [ngClass]=\"wrapCls\" (click)=\"onClick()\">\n  <div class=\"{{prefixCls}}-text\">\n    <ng-content></ng-content>\n  </div>\n  <div *ngIf=\"closable && !disabled && !small\"\n       role=\"button\"\n       class=\"{{prefixCls}}-close\"\n       aria-label=\"remove tag\"\n       (click)=\"onTagClose()\">\n    <Icon aria-hidden=\"true\" [type]=\"'cross-circle'\" [size]=\"'xs'\"></Icon>\n  </div>\n</div>\n",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    TagComponent.ctorParameters = function () { return []; };
    TagComponent.propDecorators = {
        small: [{ type: Input }],
        closable: [{ type: Input }],
        selected: [{ type: Input }],
        disabled: [{ type: Input }],
        onChange: [{ type: Output }],
        onClose: [{ type: Output }],
        afterClose: [{ type: Output }]
    };
    return TagComponent;
}());
export { TagComponent };
if (false) {
    /** @type {?} */
    TagComponent.prototype.prefixCls;
    /** @type {?} */
    TagComponent.prototype.closed;
    /** @type {?} */
    TagComponent.prototype.wrapCls;
    /**
     * @type {?}
     * @private
     */
    TagComponent.prototype._small;
    /**
     * @type {?}
     * @private
     */
    TagComponent.prototype._closable;
    /**
     * @type {?}
     * @private
     */
    TagComponent.prototype._selected;
    /**
     * @type {?}
     * @private
     */
    TagComponent.prototype._disabled;
    /** @type {?} */
    TagComponent.prototype.onChange;
    /** @type {?} */
    TagComponent.prototype.onClose;
    /** @type {?} */
    TagComponent.prototype.afterClose;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsidGFnL3RhZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsaUJBQWlCLEVBQ2pCLEtBQUssRUFDTCxNQUFNLEVBQ04sWUFBWSxFQUNiLE1BQU0sZUFBZSxDQUFDO0FBRXZCO0lBb0RFO1FBN0NBLGNBQVMsR0FBVyxRQUFRLENBQUM7UUFDN0IsV0FBTSxHQUFZLEtBQUssQ0FBQztRQUN4QixZQUFPLEdBQVEsRUFBRSxDQUFDO1FBRVYsV0FBTSxHQUFZLEtBQUssQ0FBQztRQUN4QixjQUFTLEdBQVksS0FBSyxDQUFDO1FBQzNCLGNBQVMsR0FBWSxLQUFLLENBQUM7UUFDM0IsY0FBUyxHQUFZLEtBQUssQ0FBQztRQWdDbkMsYUFBUSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBRXRELFlBQU8sR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUVyRCxlQUFVLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFFekMsQ0FBQztJQXBDaEIsc0JBQ0ksK0JBQUs7Ozs7UUFEVDtZQUVFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixDQUFDOzs7OztRQUNELFVBQVUsQ0FBQztZQUNULElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1lBQ2hCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNyQixDQUFDOzs7T0FKQTtJQUtELHNCQUNJLGtDQUFROzs7O1FBRFo7WUFFRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDeEIsQ0FBQzs7Ozs7UUFDRCxVQUFhLENBQUM7WUFDWixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQztZQUNuQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDckIsQ0FBQzs7O09BSkE7SUFLRCxzQkFDSSxrQ0FBUTs7Ozs7UUFEWixVQUNhLENBQUM7WUFDWixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQztZQUNuQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDckIsQ0FBQzs7O09BQUE7SUFDRCxzQkFDSSxrQ0FBUTs7OztRQURaO1lBRUUsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3hCLENBQUM7Ozs7O1FBQ0QsVUFBYSxDQUFDO1lBQ1osSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUM7WUFDbkIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3JCLENBQUM7OztPQUpBOzs7O0lBY0QsOEJBQU87OztJQUFQO1FBQ0UsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDckIsQ0FBQzs7OztJQUVELGlDQUFVOzs7SUFBVjtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixDQUFDOzs7O0lBRUQsa0NBQVc7OztJQUFYOztRQUNFLElBQUksQ0FBQyxPQUFPO1lBQ1YsR0FBQyxJQUFJLENBQUMsU0FBUyxJQUFHLElBQUk7WUFDdEIsR0FBSSxJQUFJLENBQUMsU0FBUyxZQUFTLElBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNuRyxHQUFJLElBQUksQ0FBQyxTQUFTLFdBQVEsSUFBRyxJQUFJLENBQUMsTUFBTTtZQUN4QyxHQUFJLElBQUksQ0FBQyxTQUFTLFlBQVMsSUFBRyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUztZQUNsRyxHQUFJLElBQUksQ0FBQyxTQUFTLGNBQVcsSUFBRyxJQUFJLENBQUMsU0FBUztZQUM5QyxHQUFJLElBQUksQ0FBQyxTQUFTLGNBQVcsSUFBRyxJQUFJLENBQUMsU0FBUztlQUMvQyxDQUFDO0lBQ0osQ0FBQzs7OztJQUVELCtCQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDOztnQkFsRkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4Qix3YkFBbUM7b0JBQ25DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2lCQUN0Qzs7Ozs7d0JBWUUsS0FBSzsyQkFRTCxLQUFLOzJCQVFMLEtBQUs7MkJBS0wsS0FBSzsyQkFRTCxNQUFNOzBCQUVOLE1BQU07NkJBRU4sTUFBTTs7SUFrQ1QsbUJBQUM7Q0FBQSxBQW5GRCxJQW1GQztTQTdFWSxZQUFZOzs7SUFDdkIsaUNBQTZCOztJQUM3Qiw4QkFBd0I7O0lBQ3hCLCtCQUFrQjs7Ozs7SUFFbEIsOEJBQWdDOzs7OztJQUNoQyxpQ0FBbUM7Ozs7O0lBQ25DLGlDQUFtQzs7Ozs7SUFDbkMsaUNBQW1DOztJQStCbkMsZ0NBQ3NEOztJQUN0RCwrQkFDcUQ7O0lBQ3JELGtDQUN3RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgT25Jbml0LFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdUYWcsIG56bS10YWcnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFnLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcblxuZXhwb3J0IGNsYXNzIFRhZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHByZWZpeENsczogc3RyaW5nID0gJ2FtLXRhZyc7XG4gIGNsb3NlZDogYm9vbGVhbiA9IGZhbHNlO1xuICB3cmFwQ2xzOiBhbnkgPSB7fTtcblxuICBwcml2YXRlIF9zbWFsbDogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9jbG9zYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9zZWxlY3RlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9kaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpXG4gIGdldCBzbWFsbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fc21hbGw7XG4gIH1cbiAgc2V0IHNtYWxsKHYpIHtcbiAgICB0aGlzLl9zbWFsbCA9IHY7XG4gICAgdGhpcy5zZXRDbGFzc01hcCgpO1xuICB9XG4gIEBJbnB1dCgpXG4gIGdldCBjbG9zYWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fY2xvc2FibGU7XG4gIH1cbiAgc2V0IGNsb3NhYmxlKHYpIHtcbiAgICB0aGlzLl9jbG9zYWJsZSA9IHY7XG4gICAgdGhpcy5zZXRDbGFzc01hcCgpO1xuICB9XG4gIEBJbnB1dCgpXG4gIHNldCBzZWxlY3RlZCh2KSB7XG4gICAgdGhpcy5fc2VsZWN0ZWQgPSB2O1xuICAgIHRoaXMuc2V0Q2xhc3NNYXAoKTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICB9XG4gIHNldCBkaXNhYmxlZCh2KSB7XG4gICAgdGhpcy5fZGlzYWJsZWQgPSB2O1xuICAgIHRoaXMuc2V0Q2xhc3NNYXAoKTtcbiAgfVxuICBAT3V0cHV0KClcbiAgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIEBPdXRwdXQoKVxuICBvbkNsb3NlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KClcbiAgYWZ0ZXJDbG9zZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgb25DbGljaygpIHtcbiAgICBpZiAodGhpcy5fZGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5fc2VsZWN0ZWQgPSAhdGhpcy5fc2VsZWN0ZWQ7XG4gICAgdGhpcy5vbkNoYW5nZS5lbWl0KHRoaXMuX3NlbGVjdGVkKTtcbiAgICB0aGlzLnNldENsYXNzTWFwKCk7XG4gIH1cblxuICBvblRhZ0Nsb3NlKCkge1xuICAgIHRoaXMub25DbG9zZS5lbWl0KCk7XG4gICAgdGhpcy5jbG9zZWQgPSB0cnVlO1xuICAgIHRoaXMuYWZ0ZXJDbG9zZS5lbWl0KCk7XG4gIH1cblxuICBzZXRDbGFzc01hcCgpIHtcbiAgICB0aGlzLndyYXBDbHMgPSB7XG4gICAgICBbdGhpcy5wcmVmaXhDbHNdOiB0cnVlLFxuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1ub3JtYWxgXTogIXRoaXMuX2Rpc2FibGVkICYmICghdGhpcy5fc2VsZWN0ZWQgfHwgdGhpcy5fc21hbGwgfHwgdGhpcy5fY2xvc2FibGUpLFxuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1zbWFsbGBdOiB0aGlzLl9zbWFsbCxcbiAgICAgIFtgJHt0aGlzLnByZWZpeENsc30tYWN0aXZlYF06IHRoaXMuX3NlbGVjdGVkICYmICF0aGlzLl9kaXNhYmxlZCAmJiAhdGhpcy5fc21hbGwgJiYgIXRoaXMuX2Nsb3NhYmxlLFxuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1kaXNhYmxlZGBdOiB0aGlzLl9kaXNhYmxlZCxcbiAgICAgIFtgJHt0aGlzLnByZWZpeENsc30tY2xvc2FibGVgXTogdGhpcy5fY2xvc2FibGVcbiAgICB9O1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zZXRDbGFzc01hcCgpO1xuICB9XG59XG4iXX0=