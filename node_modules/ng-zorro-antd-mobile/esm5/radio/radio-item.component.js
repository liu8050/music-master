/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectorRef, Input, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';
import { Subject } from 'rxjs';
var RadioItemComponent = /** @class */ (function () {
    function RadioItemComponent(cdr) {
        this.cdr = cdr;
        this.select$ = new Subject();
        this.prefixCls = 'am-radio';
        this._checked = false;
        this._disabled = false;
        this.wrap = false;
        this.error = false;
        this.multipleLine = false;
        this.platform = 'ios';
        this.align = 'middle';
    }
    Object.defineProperty(RadioItemComponent.prototype, "checked", {
        get: /**
         * @return {?}
         */
        function () {
            return this._checked;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._checked = value;
            this.cdr.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioItemComponent.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._disabled = value;
            this.cdr.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    RadioItemComponent.prototype.onRadioItemClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) { };
    /**
     * @param {?} event
     * @return {?}
     */
    RadioItemComponent.prototype.change = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this.disabled && !this.checked) {
            this.select$.next(this);
        }
    };
    /**
     * @return {?}
     */
    RadioItemComponent.prototype.markForCheck = /**
     * @return {?}
     */
    function () {
        this.cdr.markForCheck();
    };
    RadioItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'RadioItem, nzm-radio-item',
                    template: "<ListItem [className]=\"'am-radio-item ' + (disabled ? 'am-radio-item-disabled' : '')\"\n          [wrap]=\"wrap\"\n          [align]=\"align\"\n          [arrow]=\"arrow\"\n          [error]=\"error\"\n          [extra]=\"radio\"\n          [thumb]=\"thumb\"\n          [disabled]=\"disabled\"\n          [platform]=\"platform\"\n          [multipleLine]=\"multipleLine\"\n          [disabled]=\"disabled\"\n          [wrap]=\"wrap\"\n          (onClick)=\"onRadioItemClick($event)\"\n>\n  <ng-content></ng-content>\n</ListItem>\n<ng-template #radio>\n  <label Radio\n         [name]=\"name\"\n         [value]=\"value\"\n         [checked]=\"checked\"\n         [disabled]=\"disabled\"\n         (onChange)=\"change($event)\"\n  ></label>\n</ng-template>\n",
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    RadioItemComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    RadioItemComponent.propDecorators = {
        name: [{ type: Input }],
        value: [{ type: Input }],
        arrow: [{ type: Input }],
        thumb: [{ type: Input }],
        wrap: [{ type: Input }],
        error: [{ type: Input }],
        multipleLine: [{ type: Input }],
        platform: [{ type: Input }],
        align: [{ type: Input }],
        disabled: [{ type: Input }]
    };
    return RadioItemComponent;
}());
export { RadioItemComponent };
if (false) {
    /** @type {?} */
    RadioItemComponent.prototype.select$;
    /** @type {?} */
    RadioItemComponent.prototype.prefixCls;
    /**
     * @type {?}
     * @private
     */
    RadioItemComponent.prototype._checked;
    /**
     * @type {?}
     * @private
     */
    RadioItemComponent.prototype._disabled;
    /** @type {?} */
    RadioItemComponent.prototype.name;
    /** @type {?} */
    RadioItemComponent.prototype.value;
    /** @type {?} */
    RadioItemComponent.prototype.arrow;
    /** @type {?} */
    RadioItemComponent.prototype.thumb;
    /** @type {?} */
    RadioItemComponent.prototype.wrap;
    /** @type {?} */
    RadioItemComponent.prototype.error;
    /** @type {?} */
    RadioItemComponent.prototype.multipleLine;
    /** @type {?} */
    RadioItemComponent.prototype.platform;
    /** @type {?} */
    RadioItemComponent.prototype.align;
    /**
     * @type {?}
     * @private
     */
    RadioItemComponent.prototype.cdr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8taXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInJhZGlvL3JhZGlvLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBZSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3SCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRS9CO0lBK0NFLDRCQUFvQixHQUFzQjtRQUF0QixRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQXhDMUMsWUFBTyxHQUFHLElBQUksT0FBTyxFQUFzQixDQUFDO1FBQzVDLGNBQVMsR0FBVyxVQUFVLENBQUM7UUFDdkIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUMxQixjQUFTLEdBQVksS0FBSyxDQUFDO1FBbUJuQyxTQUFJLEdBQVksS0FBSyxDQUFDO1FBRXRCLFVBQUssR0FBWSxLQUFLLENBQUM7UUFFdkIsaUJBQVksR0FBWSxLQUFLLENBQUM7UUFFOUIsYUFBUSxHQUFXLEtBQUssQ0FBQztRQUV6QixVQUFLLEdBQVcsUUFBUSxDQUFDO0lBVXFCLENBQUM7SUFuQy9DLHNCQUFJLHVDQUFPOzs7O1FBQVg7WUFDRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkIsQ0FBQzs7Ozs7UUFDRCxVQUFZLEtBQWM7WUFDeEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7WUFDdEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUMxQixDQUFDOzs7T0FKQTtJQXdCRCxzQkFDSSx3Q0FBUTs7OztRQURaO1lBRUUsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3hCLENBQUM7Ozs7O1FBQ0QsVUFBYSxLQUFjO1lBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDMUIsQ0FBQzs7O09BSkE7Ozs7O0lBUUQsNkNBQWdCOzs7O0lBQWhCLFVBQWlCLEtBQUssSUFBSSxDQUFDOzs7OztJQUUzQixtQ0FBTTs7OztJQUFOLFVBQU8sS0FBSztRQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNuQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN6QjtJQUNILENBQUM7Ozs7SUFFRCx5Q0FBWTs7O0lBQVo7UUFDRSxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzFCLENBQUM7O2dCQTNERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsa3dCQUEwQztvQkFDMUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7b0JBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7OztnQkFSbUIsaUJBQWlCOzs7dUJBdUJsQyxLQUFLO3dCQUVMLEtBQUs7d0JBRUwsS0FBSzt3QkFFTCxLQUFLO3VCQUVMLEtBQUs7d0JBRUwsS0FBSzsrQkFFTCxLQUFLOzJCQUVMLEtBQUs7d0JBRUwsS0FBSzsyQkFFTCxLQUFLOztJQXNCUix5QkFBQztDQUFBLEFBNURELElBNERDO1NBdERZLGtCQUFrQjs7O0lBQzdCLHFDQUE0Qzs7SUFDNUMsdUNBQStCOzs7OztJQUMvQixzQ0FBa0M7Ozs7O0lBQ2xDLHVDQUFtQzs7SUFVbkMsa0NBQ2E7O0lBQ2IsbUNBQ2M7O0lBQ2QsbUNBQ2M7O0lBQ2QsbUNBQ2lDOztJQUNqQyxrQ0FDc0I7O0lBQ3RCLG1DQUN1Qjs7SUFDdkIsMENBQzhCOztJQUM5QixzQ0FDeUI7O0lBQ3pCLG1DQUN5Qjs7Ozs7SUFVYixpQ0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdG9yUmVmLCBJbnB1dCwgVGVtcGxhdGVSZWYsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdSYWRpb0l0ZW0sIG56bS1yYWRpby1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3JhZGlvLWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBSYWRpb0l0ZW1Db21wb25lbnQge1xuICBzZWxlY3QkID0gbmV3IFN1YmplY3Q8UmFkaW9JdGVtQ29tcG9uZW50PigpO1xuICBwcmVmaXhDbHM6IHN0cmluZyA9ICdhbS1yYWRpbyc7XG4gIHByaXZhdGUgX2NoZWNrZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBnZXQgY2hlY2tlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fY2hlY2tlZDtcbiAgfVxuICBzZXQgY2hlY2tlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2NoZWNrZWQgPSB2YWx1ZTtcbiAgICB0aGlzLmNkci5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuXG4gIEBJbnB1dCgpXG4gIG5hbWU6IHN0cmluZztcbiAgQElucHV0KClcbiAgdmFsdWU6IHN0cmluZztcbiAgQElucHV0KClcbiAgYXJyb3c6IHN0cmluZztcbiAgQElucHV0KClcbiAgdGh1bWI6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG4gIEBJbnB1dCgpXG4gIHdyYXA6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KClcbiAgZXJyb3I6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KClcbiAgbXVsdGlwbGVMaW5lOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpXG4gIHBsYXRmb3JtOiBzdHJpbmcgPSAnaW9zJztcbiAgQElucHV0KClcbiAgYWxpZ246IHN0cmluZyA9ICdtaWRkbGUnO1xuICBASW5wdXQoKVxuICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICB9XG4gIHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2Rpc2FibGVkID0gdmFsdWU7XG4gICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHsgfVxuXG4gIG9uUmFkaW9JdGVtQ2xpY2soZXZlbnQpIHsgfVxuXG4gIGNoYW5nZShldmVudCkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCAmJiAhdGhpcy5jaGVja2VkKSB7XG4gICAgICB0aGlzLnNlbGVjdCQubmV4dCh0aGlzKTtcbiAgICB9XG4gIH1cblxuICBtYXJrRm9yQ2hlY2soKTogdm9pZCB7XG4gICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gIH1cbn1cbiJdfQ==