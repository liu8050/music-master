/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, HostBinding, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var StepperComponent = /** @class */ (function () {
    function StepperComponent() {
        this.prefixCls = 'am-stepper';
        this._max = Infinity;
        this._min = -Infinity;
        this._step = 1;
        this._disabled = false;
        this._readOnly = false;
        this._showNumber = false;
        this._upDisabled = false;
        this._downDisabled = false;
        this._isUpClick = false;
        this._isDownClick = false;
        this.onChange = new EventEmitter();
        this.clsStepper = true;
        this.clsStpDisabled = this._disabled;
        this.clsShowNum = this._showNumber;
        this.onChangeFn = (/**
         * @return {?}
         */
        function () { });
        this.onTouchFn = (/**
         * @return {?}
         */
        function () { });
    }
    Object.defineProperty(StepperComponent.prototype, "max", {
        get: /**
         * @return {?}
         */
        function () {
            return this._max;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._max = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepperComponent.prototype, "min", {
        get: /**
         * @return {?}
         */
        function () {
            return this._min;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._min = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepperComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._value = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepperComponent.prototype, "step", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._step = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepperComponent.prototype, "defaultValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this._defaultValue = value;
                this._value = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepperComponent.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this._downDisabled = value;
                this._upDisabled = value;
            }
            this._disabled = value;
            this.clsStpDisabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepperComponent.prototype, "readOnly", {
        get: /**
         * @return {?}
         */
        function () {
            return this._readOnly;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._readOnly = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepperComponent.prototype, "showNumber", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._showNumber = value;
            this.clsShowNum = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    StepperComponent.prototype.onIncrease = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this._upDisabled) {
            this._value = this.plus(this._value, this._step);
            this.onChange.emit(this._value);
            this.onChangeFn(this._value);
            if (this.plus(this._value, this._step) > this._max) {
                this._upDisabled = true;
            }
            if (this.minus(this._value, this._step) >= this._min) {
                this._downDisabled = false;
            }
            this._isUpClick = true;
            this.setCls();
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this._isUpClick = false;
                _this.setCls();
            }), 100);
        }
    };
    /**
     * @return {?}
     */
    StepperComponent.prototype.onDecrease = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this._downDisabled) {
            this._value = this.minus(this._value, this._step);
            this.onChange.emit(this._value);
            this.onChangeFn(this._value);
            if (this.minus(this._value, this._step) < this._min) {
                this._downDisabled = true;
            }
            if (this.plus(this._value, this._step) <= this._max) {
                this._upDisabled = false;
            }
            this._isDownClick = true;
            this.setCls();
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this._isDownClick = false;
                _this.setCls();
            }), 100);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    StepperComponent.prototype.inputChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var value = event.target.value;
        this._value = value ? parseInt(value, null) : 0;
        if (value < this._min) {
            this._value = this._min;
        }
        if (value > this._max) {
            this._value = this._max;
        }
        this.onChange.emit(this._value);
        this.onChangeFn(this._value);
    };
    /**
     * @return {?}
     */
    StepperComponent.prototype.setCls = /**
     * @return {?}
     */
    function () {
        var _a, _b;
        this.upDisableCls = (_a = {},
            _a[this.prefixCls + "-handler-up-disabled"] = this._upDisabled,
            _a[this.prefixCls + "-handler-active"] = this._isUpClick,
            _a);
        this.downDisableCls = (_b = {},
            _b[this.prefixCls + "-handler-down-disabled"] = this._downDisabled,
            _b[this.prefixCls + "-handler-active"] = this._isDownClick,
            _b);
    };
    /**
     * @return {?}
     */
    StepperComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        if (this._disabled) {
            this._downDisabled = true;
            this._upDisabled = true;
        }
        else {
            this._upDisabled = this.plus(this._value, this._step) > this._max ? true : false;
            this._downDisabled = this.minus(this._value, this._step) < this._min ? true : false;
        }
        this.setCls();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    StepperComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this._value = value;
        this.ngOnChanges();
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    StepperComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChangeFn = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    StepperComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouchFn = fn;
    };
    /**
     * @param {?} num1
     * @param {?} num2
     * @return {?}
     */
    StepperComponent.prototype.plus = /**
     * @param {?} num1
     * @param {?} num2
     * @return {?}
     */
    function (num1, num2) {
        if (num1 === undefined || num1 === null || num2 === undefined || num2 === null) {
            return;
        }
        /** @type {?} */
        var baseNum = Math.pow(10, Math.max(this.digitLength(num1), this.digitLength(num2)));
        return (this.times(num1, baseNum) + this.times(num2, baseNum)) / baseNum;
    };
    /**
     * @param {?} num1
     * @param {?} num2
     * @return {?}
     */
    StepperComponent.prototype.minus = /**
     * @param {?} num1
     * @param {?} num2
     * @return {?}
     */
    function (num1, num2) {
        if (num1 === undefined || num1 === null || num2 === undefined || num2 === null) {
            return;
        }
        /** @type {?} */
        var baseNum = Math.pow(10, Math.max(this.digitLength(num1), this.digitLength(num2)));
        return (this.times(num1, baseNum) - this.times(num2, baseNum)) / baseNum;
    };
    /**
     * @param {?} num
     * @return {?}
     */
    StepperComponent.prototype.digitLength = /**
     * @param {?} num
     * @return {?}
     */
    function (num) {
        /** @type {?} */
        var eSplit = num.toString().split(/[eE]/);
        /** @type {?} */
        var len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);
        return len > 0 ? len : 0;
    };
    /**
     * @param {?} num1
     * @param {?} num2
     * @return {?}
     */
    StepperComponent.prototype.times = /**
     * @param {?} num1
     * @param {?} num2
     * @return {?}
     */
    function (num1, num2) {
        /** @type {?} */
        var num1Changed = this.floatToFixed(num1);
        /** @type {?} */
        var num2Changed = this.floatToFixed(num2);
        /** @type {?} */
        var baseNum = this.digitLength(num1) + this.digitLength(num2);
        /** @type {?} */
        var leftValue = num1Changed * num2Changed;
        return leftValue / Math.pow(10, baseNum);
    };
    /**
     * @param {?} num
     * @return {?}
     */
    StepperComponent.prototype.floatToFixed = /**
     * @param {?} num
     * @return {?}
     */
    function (num) {
        if (num.toString().indexOf('e') === -1) {
            return Number(num.toString().replace('.', ''));
        }
        /** @type {?} */
        var dLen = this.digitLength(num);
        return dLen > 0 ? this.strip(num * Math.pow(10, dLen)) : num;
    };
    /**
     * @param {?} num
     * @param {?=} precision
     * @return {?}
     */
    StepperComponent.prototype.strip = /**
     * @param {?} num
     * @param {?=} precision
     * @return {?}
     */
    function (num, precision) {
        if (precision === void 0) { precision = 12; }
        return +parseFloat(num.toPrecision(precision));
    };
    StepperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Stepper, nzm-stepper',
                    template: "<div class=\"{{prefixCls}}-handler-wrap\">\n    <span role=\"button\"\n          class=\"{{prefixCls}}-handler {{prefixCls}}-handler-up\"\n          style=\"line-height:28px;\"\n          [ngClass]=\"upDisableCls\"\n          (click)=\"onIncrease()\">\n          <Icon [type]=\"'plus'\"\n                [size]=\"'xxs'\">\n          </Icon>\n    </span>\n    <span role=\"button\"\n          class=\"{{prefixCls}}-handler {{prefixCls}}-handler-down\"\n          style=\"line-height:28px;\"\n          [ngClass]=\"downDisableCls\"\n          (click)=\"onDecrease()\">\n          <Icon [type]=\"'minus'\"\n                [size]=\"'xxs'\">\n          </Icon>\n    </span>\n</div>\n<div class=\"{{prefixCls}}-input-wrap\">\n    <input class=\"{{prefixCls}}-input\"\n           style=\"outline:none\"\n           [disabled]=\"disabled\"\n           [readonly]=\"readOnly\"\n           [autocomplete]=\"'off'\"\n           [max]=\"max\"\n           [min]=\"min\"\n           [(ngModel)]=\"value\"\n           (change)=\"inputChange($event)\">\n</div>",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return StepperComponent; })),
                            multi: true
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    StepperComponent.ctorParameters = function () { return []; };
    StepperComponent.propDecorators = {
        max: [{ type: Input }],
        min: [{ type: Input }],
        value: [{ type: Input }],
        step: [{ type: Input }],
        defaultValue: [{ type: Input }],
        disabled: [{ type: Input }],
        readOnly: [{ type: Input }],
        showNumber: [{ type: Input }],
        onChange: [{ type: Output }],
        clsStepper: [{ type: HostBinding, args: ['class.am-stepper',] }],
        clsStpDisabled: [{ type: HostBinding, args: ['class.am-stepper-disabled',] }],
        clsShowNum: [{ type: HostBinding, args: ['class.showNumber',] }]
    };
    return StepperComponent;
}());
export { StepperComponent };
if (false) {
    /** @type {?} */
    StepperComponent.prototype.prefixCls;
    /** @type {?} */
    StepperComponent.prototype.upDisableCls;
    /** @type {?} */
    StepperComponent.prototype.downDisableCls;
    /** @type {?} */
    StepperComponent.prototype.stepperCls;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._max;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._min;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._value;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._step;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._defaultValue;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._readOnly;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._showNumber;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._upDisabled;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._downDisabled;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._isUpClick;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype._isDownClick;
    /** @type {?} */
    StepperComponent.prototype.onChange;
    /** @type {?} */
    StepperComponent.prototype.clsStepper;
    /** @type {?} */
    StepperComponent.prototype.clsStpDisabled;
    /** @type {?} */
    StepperComponent.prototype.clsShowNum;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype.onChangeFn;
    /**
     * @type {?}
     * @private
     */
    StepperComponent.prototype.onTouchFn;
}
//# sourceMappingURL=data:application/json;base64,