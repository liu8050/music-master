/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ViewChild, TemplateRef } from '@angular/core';
import { TabPaneComponent } from '../tabs/tab-pane.component';
var TabBarItemComponent = /** @class */ (function (_super) {
    tslib_1.__extends(TabBarItemComponent, _super);
    function TabBarItemComponent() {
        var _this = _super.call(this) || this;
        _this.prefixCls = 'am-tab-bar-tab';
        _this.selected = false;
        _this.tintColor = '#108ee9';
        _this.unselectedTintColor = '#888';
        _this.key = '';
        _this.title = '';
        _this.dot = false;
        _this.badge = null;
        _this.icon = null;
        _this.selectedIcon = null;
        return _this;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    TabBarItemComponent.prototype.isTemplateRef = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value instanceof TemplateRef;
    };
    TabBarItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'TabBarItem, nzm-tab-bar-item',
                    template: "<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n\n<ng-template #tabBarTab>\n  <div class=\"{{prefixCls}}-icon\"\n       [style.color]=\"selected ? tintColor : unselectedTintColor\">\n    <Badge *ngIf=\"badge\" className=\"{{prefixCls}}-badge tab-badge\" [text]=\"badge\">\n      <ng-container *ngIf=\"isTemplateRef(selected ? selectedIcon : icon); then domTemplate; else imgTemplate\">\n      </ng-container>\n    </Badge>\n    <Badge className=\"{{prefixCls}}-badge tab-badge\" [dot]=\"dot\" *ngIf=\"dot\">\n      <ng-container *ngIf=\"isTemplateRef(selected ? selectedIcon : icon); then domTemplate; else imgTemplate\">\n      </ng-container>\n    </Badge>\n    <ng-container *ngIf=\"!badge && !dot\" >\n      <ng-container *ngIf=\"isTemplateRef(selected ? selectedIcon : icon); then domTemplate; else imgTemplate\">\n      </ng-container>\n    </ng-container>\n  </div>\n  <p class=\"{{prefixCls}}-title\" [style.color]=\"selected ? tintColor : unselectedTintColor\">\n    {{title}}\n  </p>\n</ng-template>\n\n<ng-template #domTemplate>\n  <ng-template [ngTemplateOutlet]=\"(selected ? selectedIcon : icon)\"></ng-template>\n</ng-template>\n\n<ng-template #imgTemplate >\n  <img src=\"{{selected ? selectedIcon : icon}}\" alt=\"{{title}}\">\n</ng-template>"
                }] }
    ];
    /** @nocollapse */
    TabBarItemComponent.ctorParameters = function () { return []; };
    TabBarItemComponent.propDecorators = {
        tabBarTab: [{ type: ViewChild, args: ['tabBarTab',] }],
        key: [{ type: Input }],
        title: [{ type: Input }],
        dot: [{ type: Input }],
        badge: [{ type: Input }],
        icon: [{ type: Input }],
        selectedIcon: [{ type: Input }]
    };
    return TabBarItemComponent;
}(TabPaneComponent));
export { TabBarItemComponent };
if (false) {
    /** @type {?} */
    TabBarItemComponent.prototype.prefixCls;
    /** @type {?} */
    TabBarItemComponent.prototype.selected;
    /** @type {?} */
    TabBarItemComponent.prototype.tintColor;
    /** @type {?} */
    TabBarItemComponent.prototype.unselectedTintColor;
    /** @type {?} */
    TabBarItemComponent.prototype.tabBarTab;
    /** @type {?} */
    TabBarItemComponent.prototype.key;
    /** @type {?} */
    TabBarItemComponent.prototype.title;
    /** @type {?} */
    TabBarItemComponent.prototype.dot;
    /** @type {?} */
    TabBarItemComponent.prototype.badge;
    /** @type {?} */
    TabBarItemComponent.prototype.icon;
    /** @type {?} */
    TabBarItemComponent.prototype.selectedIcon;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWJhci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsidGFiLWJhci90YWItYmFyLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsU0FBUyxFQUNULFdBQVcsRUFDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUU5RDtJQUl5QywrQ0FBZ0I7SUFzQnZEO1FBQUEsWUFDRSxpQkFBTyxTQUNSO1FBdkJELGVBQVMsR0FBVyxnQkFBZ0IsQ0FBQztRQUNyQyxjQUFRLEdBQVksS0FBSyxDQUFDO1FBQzFCLGVBQVMsR0FBVyxTQUFTLENBQUM7UUFDOUIseUJBQW1CLEdBQVcsTUFBTSxDQUFDO1FBTXJDLFNBQUcsR0FBVyxFQUFFLENBQUM7UUFFakIsV0FBSyxHQUFXLEVBQUUsQ0FBQztRQUVuQixTQUFHLEdBQVksS0FBSyxDQUFDO1FBRXJCLFdBQUssR0FBb0IsSUFBSSxDQUFDO1FBRTlCLFVBQUksR0FBK0IsSUFBSSxDQUFDO1FBRXhDLGtCQUFZLEdBQStCLElBQUksQ0FBQzs7SUFJaEQsQ0FBQzs7Ozs7SUFFRCwyQ0FBYTs7OztJQUFiLFVBQWMsS0FBSztRQUNqQixPQUFPLEtBQUssWUFBWSxXQUFXLENBQUM7SUFDdEMsQ0FBQzs7Z0JBaENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsOEJBQThCO29CQUN4Qyw0d0NBQTRDO2lCQUM3Qzs7Ozs7NEJBT0UsU0FBUyxTQUFDLFdBQVc7c0JBR3JCLEtBQUs7d0JBRUwsS0FBSztzQkFFTCxLQUFLO3dCQUVMLEtBQUs7dUJBRUwsS0FBSzsrQkFFTCxLQUFLOztJQVVSLDBCQUFDO0NBQUEsQUFqQ0QsQ0FJeUMsZ0JBQWdCLEdBNkJ4RDtTQTdCWSxtQkFBbUI7OztJQUM5Qix3Q0FBcUM7O0lBQ3JDLHVDQUEwQjs7SUFDMUIsd0NBQThCOztJQUM5QixrREFBcUM7O0lBRXJDLHdDQUM2Qjs7SUFFN0Isa0NBQ2lCOztJQUNqQixvQ0FDbUI7O0lBQ25CLGtDQUNxQjs7SUFDckIsb0NBQzhCOztJQUM5QixtQ0FDd0M7O0lBQ3hDLDJDQUNnRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIFZpZXdDaGlsZCxcbiAgVGVtcGxhdGVSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUYWJQYW5lQ29tcG9uZW50IH0gZnJvbSAnLi4vdGFicy90YWItcGFuZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdUYWJCYXJJdGVtLCBuem0tdGFiLWJhci1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhYi1iYXItaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGFiQmFySXRlbUNvbXBvbmVudCBleHRlbmRzIFRhYlBhbmVDb21wb25lbnQge1xuICBwcmVmaXhDbHM6IHN0cmluZyA9ICdhbS10YWItYmFyLXRhYic7XG4gIHNlbGVjdGVkOiBib29sZWFuID0gZmFsc2U7XG4gIHRpbnRDb2xvcjogc3RyaW5nID0gJyMxMDhlZTknO1xuICB1bnNlbGVjdGVkVGludENvbG9yOiBzdHJpbmcgPSAnIzg4OCc7XG5cbiAgQFZpZXdDaGlsZCgndGFiQmFyVGFiJylcbiAgdGFiQmFyVGFiOiBUZW1wbGF0ZVJlZjx2b2lkPjtcblxuICBASW5wdXQoKVxuICBrZXk6IHN0cmluZyA9ICcnO1xuICBASW5wdXQoKVxuICB0aXRsZTogc3RyaW5nID0gJyc7XG4gIEBJbnB1dCgpXG4gIGRvdDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKVxuICBiYWRnZTogbnVtYmVyIHwgc3RyaW5nID0gbnVsbDtcbiAgQElucHV0KClcbiAgaWNvbjogc3RyaW5nIHwgVGVtcGxhdGVSZWY8dm9pZD4gPSBudWxsO1xuICBASW5wdXQoKVxuICBzZWxlY3RlZEljb246IHN0cmluZyB8IFRlbXBsYXRlUmVmPHZvaWQ+ID0gbnVsbDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgaXNUZW1wbGF0ZVJlZih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmO1xuICB9XG59XG4iXX0=