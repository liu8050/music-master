/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input, Output, Component, ViewChild, forwardRef, TemplateRef, HostBinding, EventEmitter, HostListener, ViewContainerRef, ViewEncapsulation, ElementRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
/**
 * @record
 */
export function Indicator() { }
if (false) {
    /** @type {?|undefined} */
    Indicator.prototype.activate;
    /** @type {?|undefined} */
    Indicator.prototype.deactivate;
    /** @type {?|undefined} */
    Indicator.prototype.release;
    /** @type {?|undefined} */
    Indicator.prototype.finish;
}
var PullToRefreshComponent = /** @class */ (function () {
    function PullToRefreshComponent(ele) {
        this.ele = ele;
        this.transtionCls = {};
        this.style = {
            '-webkit-transform': 'translate3d( 0, 0, 0 )',
            transform: 'translate3d( 0, 0, 0 )'
        };
        this.state = {
            currentState: 'deactivate',
            drag: false
        };
        this._headerIndicator = {
            activate: '松开立即刷新',
            deactivate: '下拉可以刷新',
            release: '刷新中。。。',
            finish: '完成刷新'
        };
        this._footerIndicator = {
            activate: '松开立即刷新',
            deactivate: '上拉可以刷新',
            release: '刷新中。。。',
            finish: '完成刷新'
        };
        this._startTime = 0;
        this._endTime = 0;
        this._endRreach = false;
        this._direction = '';
        this._clientHeight = 0;
        this._currentContentHeight = 0;
        this._lastcontentOffset = 0;
        this.distanceToRefresh = 25; //触发刷新距离
        //触发刷新距离
        this.damping = 100; // 下拉的最大距离
        // 下拉的最大距离
        this.endReachedRefresh = false;
        this.refreshing = false;
        this.onRefresh = new EventEmitter();
        this.refresh = true;
        this.container = true;
        this.refreshUp = false;
        this.refreshDown = true;
    }
    Object.defineProperty(PullToRefreshComponent.prototype, "direction", {
        get: /**
         * @return {?}
         */
        function () {
            return this._direction;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._direction = value;
            this.refreshUp = this._direction === 'up' || this._direction === '';
            this.refreshDown = this._direction === 'down' || this._direction === '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PullToRefreshComponent.prototype, "headerIndicator", {
        get: /**
         * @return {?}
         */
        function () {
            return this._headerIndicator;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            Object.assign(this._headerIndicator, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PullToRefreshComponent.prototype, "footerIndicator", {
        get: /**
         * @return {?}
         */
        function () {
            return this._footerIndicator;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            Object.assign(this._footerIndicator, value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} e
     * @return {?}
     */
    PullToRefreshComponent.prototype.touchstart = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this._startTime = Date.now();
        if (this._direction === 'down' || (this._direction === '' && !this._endRreach)) {
            if (this.ele.nativeElement.scrollTop > 0) {
                this.startY = undefined;
                return;
            }
            this.startY = e && e.changedTouches && e.changedTouches[0] && e.changedTouches[0].clientY;
            this.state.drag = undefined;
        }
        else {
            this.startY = e && e.changedTouches && e.changedTouches[0] && e.changedTouches[0].clientY;
            this._clientHeight = this._pullToRefresh.element.nativeElement.clientHeight;
            this._currentContentHeight = document.getElementsByTagName('pulltorefresh')[0].clientHeight;
        }
        this.transtionCls = '';
    };
    /**
     * @param {?} e
     * @return {?}
     */
    PullToRefreshComponent.prototype.touchmove = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (this._direction === 'down' || (this._direction === '' && !this._endRreach)) {
            if (this.ele.nativeElement.scrollTop > 0) {
                return;
            }
            /** @type {?} */
            var distanceY = e.changedTouches[0].clientY - this.startY;
            if (distanceY < 0) {
                // 滚动
                this.state.drag = false;
            }
            else {
                // 下拉
                this.state.drag = true;
            }
            if (this.state.drag) {
                // 禁止滚动
                if (e.cancelable) {
                    e.preventDefault();
                }
            }
            else {
                return;
            }
            if (distanceY > this.damping) {
                //当超过设定阈值是，缓慢增加
                distanceY = (distanceY / (distanceY + this.damping)) * this.damping * 2;
            }
            else if (distanceY < 0) {
                distanceY = 0;
            }
            if (distanceY > this.distanceToRefresh) {
                this.state.currentState = 'activate';
                if (this._ngModelOnChange) {
                    this._ngModelOnChange(this.state);
                }
            }
            this.style = {
                '-webkit-transform': 'translate3d( 0, ' + distanceY + 'px, 0 )',
                transform: 'translate3d( 0, ' + distanceY + 'px, 0 )'
            };
        }
        else {
            /** @type {?} */
            var distanceY = e.changedTouches[0].clientY - this.startY;
            //向上拉动的时候，如果当前窗口内容没有滚到最后，则不实现拖动的动作；向下滚动不实现拖动动作
            if (Math.abs(this._lastcontentOffset) <= this._clientHeight - this._currentContentHeight - this.distanceToRefresh ||
                distanceY > 0) {
                // 滚动
                this.state.drag = false;
            }
            else {
                // 上拉
                this.state.drag = true;
            }
            if (this.state.drag) {
                // 禁止滚动
                if (e.cancelable) {
                    e.preventDefault();
                }
            }
            else {
                return;
            }
            //如果滑动到底部了，滑动距离随着拉动的距离增加缓慢增加
            distanceY = -(distanceY / (distanceY - this.damping)) * this.damping;
            if (Math.abs(distanceY) > this.distanceToRefresh) {
                this.state.currentState = 'activate';
                if (this._ngModelOnChange) {
                    this._ngModelOnChange(this.state);
                }
            }
            this.style = {
                '-webkit-transform': 'translate3d( 0, ' + distanceY + 'px, 0 )',
                transform: 'translate3d( 0, ' + distanceY + 'px, 0 )'
            };
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    PullToRefreshComponent.prototype.touchend = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var _this = this;
        if (!this.startY || this.state.drag === false) {
            return;
        }
        /** @type {?} */
        var distanceY = e.changedTouches[0].clientY - this.startY;
        if (Math.abs(distanceY) >= this.distanceToRefresh) {
            this.state.currentState = 'release';
            if (this._direction === 'down' || (this._direction === '' && !this._endRreach)) {
                this.translateY(this.distanceToRefresh + 1);
            }
            else {
                this.translateY(-this.distanceToRefresh - 1);
            }
            if (this._ngModelOnChange) {
                this._ngModelOnChange(this.state);
            }
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.state.currentState = 'finish';
                if (_this._ngModelOnChange) {
                    _this._ngModelOnChange(_this.state);
                }
                if (_this._direction === 'down' || (_this._direction === '' && !_this._endRreach)) {
                    _this.onRefresh.emit('down');
                }
                else {
                    _this.translateY(-_this.distanceToRefresh - 1);
                    _this.onRefresh.emit('up');
                }
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.state.currentState = 'deactivate';
                    if (_this._ngModelOnChange) {
                        _this._ngModelOnChange(_this.state);
                    }
                    _this.translateY(0);
                }), 0);
            }), 500);
        }
        else {
            this.translateY(0);
        }
    };
    /**
     * @param {?} evt
     * @return {?}
     */
    PullToRefreshComponent.prototype.touchcancel = /**
     * @param {?} evt
     * @return {?}
     */
    function (evt) {
        this.translateY(0);
    };
    /**
     * @param {?} evt
     * @return {?}
     */
    PullToRefreshComponent.prototype.scroll = /**
     * @param {?} evt
     * @return {?}
     */
    function (evt) {
        var _this = this;
        this._endTime = Date.now();
        /** @type {?} */
        var contentOffset = evt.target.scrollTop;
        /** @type {?} */
        var offset = contentOffset - this._lastcontentOffset;
        this._lastcontentOffset = contentOffset;
        if (this._direction === '') {
            if (offset > 0 &&
                contentOffset > 0 &&
                evt.target.scrollTop + this.ele.nativeElement.clientHeight === evt.target.scrollHeight) {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this._endRreach = true;
                }), 500);
            }
            else {
                this._endRreach = false;
            }
        }
        if (!this.endReachedRefresh) {
            return;
        }
        if (this._direction === 'down' &&
            offset > 0 &&
            contentOffset > 0 &&
            evt.target.scrollTop + this.ele.nativeElement.clientHeight > evt.target.scrollHeight - this.distanceToRefresh &&
            this._endTime - this._startTime >= 100) {
            this._startTime = this._endTime;
            if (this.refreshing) {
                this.state.currentState = 'release';
                if (this._ngModelOnChange) {
                    this._ngModelOnChange(this.state);
                }
            }
            setTimeout((/**
             * @return {?}
             */
            function () {
                if (_this._direction === '') {
                    _this._endRreach = true;
                }
                if (_this.endReachedRefresh) {
                    _this.onRefresh.emit('endReachedRefresh');
                }
                if (_this.refreshing) {
                    _this.state.currentState = 'finish';
                    if (_this._ngModelOnChange) {
                        _this._ngModelOnChange(_this.state);
                    }
                }
            }), 500);
        }
        else {
            setTimeout((/**
             * @return {?}
             */
            function () {
                if (_this._direction === '') {
                    _this._endRreach = false;
                }
                if (_this.refreshing) {
                    _this.state.currentState = 'finish';
                    if (_this._ngModelOnChange) {
                        _this._ngModelOnChange(_this.state);
                    }
                }
            }), 500);
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PullToRefreshComponent.prototype.isTemplateRef = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value) {
            return value instanceof TemplateRef;
        }
    };
    /**
     * @param {?} distanceY
     * @return {?}
     */
    PullToRefreshComponent.prototype.translateY = /**
     * @param {?} distanceY
     * @return {?}
     */
    function (distanceY) {
        this.transtionCls = 'am-pull-to-refresh-transition';
        this.style = {
            '-webkit-transform': 'translate3d( 0, ' + distanceY + 'px, 0 )',
            transform: 'translate3d( 0, ' + distanceY + 'px, 0 )'
        };
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PullToRefreshComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value !== null) {
            this.state = value;
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    PullToRefreshComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this._ngModelOnChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    PullToRefreshComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this._ngModelOnTouched = fn;
    };
    PullToRefreshComponent.decorators = [
        { type: Component, args: [{
                    selector: 'PullToRefresh, nzm-pull-to-refresh',
                    template: "<div class=\"am-pull-to-refresh-content-wrapper\">\n  <div class=\"am-pull-to-refresh-content\" [ngClass]=\"transtionCls\" [ngStyle]=\"style\">\n    <div *ngIf=\"direction === 'down' || direction === ''\" class=\"am-pull-to-refresh-indicator am-pull-to-refresh-header-indicator\">\n      <ng-template *ngIf=\"isTemplateRef(headerIndicator[state.currentState])\" [ngTemplateOutlet]=\"headerIndicator[state.currentState]\"></ng-template>\n      <ng-container *ngIf=\"!isTemplateRef(headerIndicator[state.currentState])\">{{headerIndicator[state.currentState]}}</ng-container>\n    </div>\n    <div #pullToRefresh>\n      <ng-content></ng-content>\n      <div *ngIf=\"direction === 'down' && endReachedRefresh\" class=\"am-pull-to-refresh-indicator am-pull-to-refresh-footer-indicator\">\n        <ng-template *ngIf=\"isTemplateRef(footerIndicator[state.currentState])\" [ngTemplateOutlet]=\"footerIndicator[state.currentState]\"></ng-template>\n        <ng-container *ngIf=\"!isTemplateRef(footerIndicator[state.currentState])\">{{footerIndicator[state.currentState]}}</ng-container>\n      </div>\n    </div>\n    <div *ngIf=\"direction === 'up' || direction === ''\" class=\"am-pull-to-refresh-indicator am-pull-to-refresh-footer-indicator\">\n      <ng-template *ngIf=\"isTemplateRef(footerIndicator[state.currentState])\" [ngTemplateOutlet]=\"footerIndicator[state.currentState]\"></ng-template>\n      <ng-container *ngIf=\"!isTemplateRef(footerIndicator[state.currentState])\">{{footerIndicator[state.currentState]}}</ng-container>\n    </div>\n  </div>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PullToRefreshComponent; })),
                            multi: true
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    PullToRefreshComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    PullToRefreshComponent.propDecorators = {
        _pullToRefresh: [{ type: ViewChild, args: ['pullToRefresh', { read: ViewContainerRef },] }],
        distanceToRefresh: [{ type: Input }],
        damping: [{ type: Input }],
        endReachedRefresh: [{ type: Input }],
        refreshing: [{ type: Input }],
        direction: [{ type: Input }],
        headerIndicator: [{ type: Input }],
        footerIndicator: [{ type: Input }],
        onRefresh: [{ type: Output }],
        refresh: [{ type: HostBinding, args: ['class.am-pull-to-refresh',] }],
        container: [{ type: HostBinding, args: ['class.super-container',] }],
        refreshUp: [{ type: HostBinding, args: ['class.am-pull-to-refresh-up',] }],
        refreshDown: [{ type: HostBinding, args: ['class.am-pull-to-refresh-down',] }],
        touchstart: [{ type: HostListener, args: ['touchstart', ['$event'],] }],
        touchmove: [{ type: HostListener, args: ['touchmove', ['$event'],] }],
        touchend: [{ type: HostListener, args: ['touchend', ['$event'],] }],
        touchcancel: [{ type: HostListener, args: ['touchcancel', ['$event'],] }],
        scroll: [{ type: HostListener, args: ['scroll', ['$event'],] }]
    };
    return PullToRefreshComponent;
}());
export { PullToRefreshComponent };
if (false) {
    /** @type {?} */
    PullToRefreshComponent.prototype.transtionCls;
    /** @type {?} */
    PullToRefreshComponent.prototype.style;
    /** @type {?} */
    PullToRefreshComponent.prototype.startY;
    /** @type {?} */
    PullToRefreshComponent.prototype.state;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._headerIndicator;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._footerIndicator;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._startTime;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._endTime;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._endRreach;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._direction;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._clientHeight;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._currentContentHeight;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._lastcontentOffset;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._ngModelOnChange;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._ngModelOnTouched;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype._pullToRefresh;
    /** @type {?} */
    PullToRefreshComponent.prototype.distanceToRefresh;
    /** @type {?} */
    PullToRefreshComponent.prototype.damping;
    /** @type {?} */
    PullToRefreshComponent.prototype.endReachedRefresh;
    /** @type {?} */
    PullToRefreshComponent.prototype.refreshing;
    /** @type {?} */
    PullToRefreshComponent.prototype.onRefresh;
    /** @type {?} */
    PullToRefreshComponent.prototype.refresh;
    /** @type {?} */
    PullToRefreshComponent.prototype.container;
    /** @type {?} */
    PullToRefreshComponent.prototype.refreshUp;
    /** @type {?} */
    PullToRefreshComponent.prototype.refreshDown;
    /**
     * @type {?}
     * @private
     */
    PullToRefreshComponent.prototype.ele;
}
//# sourceMappingURL=data:application/json;base64,