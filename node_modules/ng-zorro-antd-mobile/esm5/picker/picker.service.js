/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable, Injector } from '@angular/core';
import { PickerComponent } from './picker.component';
import { PickerOptions } from './picker-options.provider';
import { PopupService } from '../core/services/popup.service';
var PickerService = /** @class */ (function (_super) {
    tslib_1.__extends(PickerService, _super);
    function PickerService() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param {?=} config
     * @param {?=} confirmCallback
     * @param {?=} cancelCallback
     * @return {?}
     */
    PickerService.showPicker = /**
     * @param {?=} config
     * @param {?=} confirmCallback
     * @param {?=} cancelCallback
     * @return {?}
     */
    function (config, confirmCallback, cancelCallback) {
        var _this = this;
        if (config === void 0) { config = PickerService.defaultOptions; }
        /** @type {?} */
        var options = new PickerOptions();
        Object.assign(options, config, {
            hidePicker: (/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                _this.hidePicker();
            }),
            confirm: (/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                if (confirmCallback) {
                    confirmCallback(event);
                }
            }),
            cancel: (/**
             * @return {?}
             */
            function () {
                if (cancelCallback) {
                    cancelCallback();
                }
            })
        });
        /** @type {?} */
        var childInjector = Injector.create([
            {
                provide: PickerOptions,
                useValue: options
            }
        ]);
        PickerService.showPopup('PickerComponent', PickerComponent, childInjector);
    };
    /**
     * @return {?}
     */
    PickerService.hidePicker = /**
     * @return {?}
     */
    function () {
        PickerService.hidePopup('PickerComponent');
    };
    PickerService.defaultOptions = new PickerOptions();
    PickerService.decorators = [
        { type: Injectable }
    ];
    return PickerService;
}(PopupService));
export { PickerService };
if (false) {
    /** @type {?} */
    PickerService.defaultOptions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInBpY2tlci9waWNrZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQWtCLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUU5RDtJQUNtQyx5Q0FBWTtJQUQvQzs7SUFzQ0EsQ0FBQzs7Ozs7OztJQWxDUSx3QkFBVTs7Ozs7O0lBQWpCLFVBQ0UsTUFBb0QsRUFDcEQsZUFBZ0MsRUFDaEMsY0FBK0I7UUFIakMsaUJBNkJDO1FBNUJDLHVCQUFBLEVBQUEsU0FBd0IsYUFBYSxDQUFDLGNBQWM7O1lBSTlDLE9BQU8sR0FBRyxJQUFJLGFBQWEsRUFBRTtRQUNuQyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUU7WUFDN0IsVUFBVTs7OztZQUFFLFVBQUMsS0FBSztnQkFDaEIsS0FBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ3BCLENBQUMsQ0FBQTtZQUNELE9BQU87Ozs7WUFBRSxVQUFDLEtBQUs7Z0JBQ2IsSUFBSSxlQUFlLEVBQUU7b0JBQ25CLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDeEI7WUFDSCxDQUFDLENBQUE7WUFDRCxNQUFNOzs7WUFBRTtnQkFDTixJQUFJLGNBQWMsRUFBRTtvQkFDbEIsY0FBYyxFQUFFLENBQUM7aUJBQ2xCO1lBQ0gsQ0FBQyxDQUFBO1NBQ0YsQ0FBQyxDQUFDOztZQUVHLGFBQWEsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDO1lBQ3BDO2dCQUNFLE9BQU8sRUFBRSxhQUFhO2dCQUN0QixRQUFRLEVBQUUsT0FBTzthQUNsQjtTQUNGLENBQUM7UUFDRixhQUFhLENBQUMsU0FBUyxDQUFDLGlCQUFpQixFQUFFLGVBQWUsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUM3RSxDQUFDOzs7O0lBRU0sd0JBQVU7OztJQUFqQjtRQUNFLGFBQWEsQ0FBQyxTQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBbkNNLDRCQUFjLEdBQWtCLElBQUksYUFBYSxFQUFFLENBQUM7O2dCQUY1RCxVQUFVOztJQXNDWCxvQkFBQztDQUFBLEFBdENELENBQ21DLFlBQVksR0FxQzlDO1NBckNZLGFBQWE7OztJQUN4Qiw2QkFBMkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9waWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFBpY2tlckNhbGxCYWNrLCBQaWNrZXJPcHRpb25zIH0gZnJvbSAnLi9waWNrZXItb3B0aW9ucy5wcm92aWRlcic7XG5pbXBvcnQgeyBQb3B1cFNlcnZpY2UgfSBmcm9tICcuLi9jb3JlL3NlcnZpY2VzL3BvcHVwLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUGlja2VyU2VydmljZSBleHRlbmRzIFBvcHVwU2VydmljZSB7XG4gIHN0YXRpYyBkZWZhdWx0T3B0aW9uczogUGlja2VyT3B0aW9ucyA9IG5ldyBQaWNrZXJPcHRpb25zKCk7XG5cbiAgc3RhdGljIHNob3dQaWNrZXIoXG4gICAgY29uZmlnOiBQaWNrZXJPcHRpb25zID0gUGlja2VyU2VydmljZS5kZWZhdWx0T3B0aW9ucyxcbiAgICBjb25maXJtQ2FsbGJhY2s/OiBQaWNrZXJDYWxsQmFjayxcbiAgICBjYW5jZWxDYWxsYmFjaz86IFBpY2tlckNhbGxCYWNrXG4gICk6IHZvaWQge1xuICAgIGNvbnN0IG9wdGlvbnMgPSBuZXcgUGlja2VyT3B0aW9ucygpO1xuICAgIE9iamVjdC5hc3NpZ24ob3B0aW9ucywgY29uZmlnLCB7XG4gICAgICBoaWRlUGlja2VyOiAoZXZlbnQpOiB2b2lkID0+IHtcbiAgICAgICAgdGhpcy5oaWRlUGlja2VyKCk7XG4gICAgICB9LFxuICAgICAgY29uZmlybTogKGV2ZW50KTogdm9pZCA9PiB7XG4gICAgICAgIGlmIChjb25maXJtQ2FsbGJhY2spIHtcbiAgICAgICAgICBjb25maXJtQ2FsbGJhY2soZXZlbnQpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgY2FuY2VsOiAoKTogdm9pZCA9PiB7XG4gICAgICAgIGlmIChjYW5jZWxDYWxsYmFjaykge1xuICAgICAgICAgIGNhbmNlbENhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGNvbnN0IGNoaWxkSW5qZWN0b3IgPSBJbmplY3Rvci5jcmVhdGUoW1xuICAgICAge1xuICAgICAgICBwcm92aWRlOiBQaWNrZXJPcHRpb25zLFxuICAgICAgICB1c2VWYWx1ZTogb3B0aW9uc1xuICAgICAgfVxuICAgIF0pO1xuICAgIFBpY2tlclNlcnZpY2Uuc2hvd1BvcHVwKCdQaWNrZXJDb21wb25lbnQnLCBQaWNrZXJDb21wb25lbnQsIGNoaWxkSW5qZWN0b3IpO1xuICB9XG5cbiAgc3RhdGljIGhpZGVQaWNrZXIoKTogdm9pZCB7XG4gICAgUGlja2VyU2VydmljZS5oaWRlUG9wdXAoJ1BpY2tlckNvbXBvbmVudCcpO1xuICB9XG59XG4iXX0=