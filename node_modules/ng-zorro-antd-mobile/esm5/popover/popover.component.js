/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { PopoverComponentOptions } from './popover-component-options.provider';
var PopoverComponent = /** @class */ (function () {
    function PopoverComponent(options) {
        this.options = options;
        this.defaultProps = {
            prefixCls: 'am-popover'
        };
        this.maskCls = {};
        this.popoverCls = {};
    }
    /**
     * @return {?}
     */
    PopoverComponent.prototype.setClassMap = /**
     * @return {?}
     */
    function () {
        var _a, _b;
        this.maskCls = (_a = {},
            _a[this.defaultProps.prefixCls + "-mask"] = this.options.mask,
            _a[this.defaultProps.prefixCls + "-mask-hidden"] = !this.options.mask,
            _a);
        this.popoverCls = (_b = {},
            _b["" + this.defaultProps.prefixCls] = true,
            _b[this.defaultProps.prefixCls + "-placement-" + this.options.placement] = true,
            _b[this.defaultProps.prefixCls + "-" + this.options.className] = true,
            _b);
    };
    /**
     * @return {?}
     */
    PopoverComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.setClassMap();
    };
    /**
     * @return {?}
     */
    PopoverComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.options.onAfterViewInit();
    };
    PopoverComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Popover',
                    template: "<ng-content></ng-content>\n<div [ngClass]=\"maskCls\" (click)=\"options.hidePopover()\"></div>\n<div [ngClass]=\"popoverCls\" style=\"color: currentcolor;\">\n  <div class=\"{{defaultProps.prefixCls}}-content\">\n    <div *ngIf=\"options.showArrow\" class=\"{{defaultProps.prefixCls}}-arrow\"></div>\n    <div class=\"{{defaultProps.prefixCls}}-inner\">\n      <div class=\"{{defaultProps.prefixCls}}-inner-wrapper\">\n        <ng-template [ngTemplateOutlet]=\"options.overlay\" [ngTemplateOutletContext]=\"{options: options}\">\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    PopoverComponent.ctorParameters = function () { return [
        { type: PopoverComponentOptions }
    ]; };
    return PopoverComponent;
}());
export { PopoverComponent };
if (false) {
    /** @type {?} */
    PopoverComponent.prototype.defaultProps;
    /** @type {?} */
    PopoverComponent.prototype.maskCls;
    /** @type {?} */
    PopoverComponent.prototype.popoverCls;
    /** @type {?} */
    PopoverComponent.prototype.options;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInBvcG92ZXIvcG9wb3Zlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQWlCLGlCQUFpQixFQUFTLE1BQU0sZUFBZSxDQUFDO0FBQ25GLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBRS9FO0lBWUUsMEJBQW1CLE9BQWdDO1FBQWhDLFlBQU8sR0FBUCxPQUFPLENBQXlCO1FBTm5ELGlCQUFZLEdBQVE7WUFDbEIsU0FBUyxFQUFFLFlBQVk7U0FDeEIsQ0FBQztRQUNGLFlBQU8sR0FBUSxFQUFFLENBQUM7UUFDbEIsZUFBVSxHQUFRLEVBQUUsQ0FBQztJQUVpQyxDQUFDOzs7O0lBRXZELHNDQUFXOzs7SUFBWDs7UUFDRSxJQUFJLENBQUMsT0FBTztZQUNWLEdBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLFVBQU8sSUFBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7WUFDMUQsR0FBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsaUJBQWMsSUFBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSTtlQUNuRSxDQUFDO1FBQ0YsSUFBSSxDQUFDLFVBQVU7WUFDYixHQUFDLEtBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFXLElBQUcsSUFBSTtZQUN4QyxHQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxtQkFBYyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVcsSUFBRyxJQUFJO1lBQzVFLEdBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLFNBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFXLElBQUcsSUFBSTtlQUNuRSxDQUFDO0lBQ0osQ0FBQzs7OztJQUVELG1DQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7O0lBQ0QsMENBQWU7OztJQUFmO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUNqQyxDQUFDOztnQkEvQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxTQUFTO29CQUNuQixnbUJBQXVDO29CQUN2QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtpQkFDdEM7Ozs7Z0JBTlEsdUJBQXVCOztJQWtDaEMsdUJBQUM7Q0FBQSxBQWhDRCxJQWdDQztTQTNCWSxnQkFBZ0I7OztJQUMzQix3Q0FFRTs7SUFDRixtQ0FBa0I7O0lBQ2xCLHNDQUFxQjs7SUFFVCxtQ0FBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEFmdGVyVmlld0luaXQsIFZpZXdFbmNhcHN1bGF0aW9uLCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9wb3ZlckNvbXBvbmVudE9wdGlvbnMgfSBmcm9tICcuL3BvcG92ZXItY29tcG9uZW50LW9wdGlvbnMucHJvdmlkZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdQb3BvdmVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvcG92ZXIuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFBvcG92ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICBkZWZhdWx0UHJvcHM6IGFueSA9IHtcbiAgICBwcmVmaXhDbHM6ICdhbS1wb3BvdmVyJ1xuICB9O1xuICBtYXNrQ2xzOiBhbnkgPSB7fTtcbiAgcG9wb3ZlckNsczogYW55ID0ge307XG5cbiAgY29uc3RydWN0b3IocHVibGljIG9wdGlvbnM6IFBvcG92ZXJDb21wb25lbnRPcHRpb25zKSB7fVxuXG4gIHNldENsYXNzTWFwKCkge1xuICAgIHRoaXMubWFza0NscyA9IHtcbiAgICAgIFtgJHt0aGlzLmRlZmF1bHRQcm9wcy5wcmVmaXhDbHN9LW1hc2tgXTogdGhpcy5vcHRpb25zLm1hc2ssXG4gICAgICBbYCR7dGhpcy5kZWZhdWx0UHJvcHMucHJlZml4Q2xzfS1tYXNrLWhpZGRlbmBdOiAhdGhpcy5vcHRpb25zLm1hc2tcbiAgICB9O1xuICAgIHRoaXMucG9wb3ZlckNscyA9IHtcbiAgICAgIFtgJHt0aGlzLmRlZmF1bHRQcm9wcy5wcmVmaXhDbHN9YF06IHRydWUsXG4gICAgICBbYCR7dGhpcy5kZWZhdWx0UHJvcHMucHJlZml4Q2xzfS1wbGFjZW1lbnQtJHt0aGlzLm9wdGlvbnMucGxhY2VtZW50fWBdOiB0cnVlLFxuICAgICAgW2Ake3RoaXMuZGVmYXVsdFByb3BzLnByZWZpeENsc30tJHt0aGlzLm9wdGlvbnMuY2xhc3NOYW1lfWBdOiB0cnVlXG4gICAgfTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0Q2xhc3NNYXAoKTtcbiAgfVxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5vcHRpb25zLm9uQWZ0ZXJWaWV3SW5pdCgpO1xuICB9XG59XG4iXX0=