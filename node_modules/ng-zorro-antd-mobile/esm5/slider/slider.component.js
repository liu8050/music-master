/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ElementRef, ViewEncapsulation, HostBinding, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var SliderComponent = /** @class */ (function () {
    function SliderComponent(_elf) {
        this._elf = _elf;
        this.prefixCls = 'am-slider';
        this.offset = 0;
        this.length = 0;
        this._min = 0;
        this._max = 100;
        this._step = 1;
        this._defaultValue = 0;
        this._disabled = false;
        this._marks = {};
        this._dots = false;
        this._included = true;
        this._trackStyle = {};
        this.onAfterChange = new EventEmitter();
        this.onChange = new EventEmitter();
        this.amSliderWrapper = true;
        this._ngModelOnChange = (/**
         * @return {?}
         */
        function () { });
        this._ngModelOnTouched = (/**
         * @return {?}
         */
        function () { });
    }
    Object.defineProperty(SliderComponent.prototype, "min", {
        get: /**
         * @return {?}
         */
        function () {
            return this._min;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._min = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "max", {
        get: /**
         * @return {?}
         */
        function () {
            return this._max;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._max = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "step", {
        get: /**
         * @return {?}
         */
        function () {
            return this._step;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._step = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.setValue(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "defaultValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._defaultValue = value;
            this.setValue(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._disabled = value;
            this.setCls();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "marks", {
        get: /**
         * @return {?}
         */
        function () {
            return this._marks;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._marks = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "dots", {
        get: /**
         * @return {?}
         */
        function () {
            return this._dots;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._dots = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "included", {
        get: /**
         * @return {?}
         */
        function () {
            return this._included;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._included = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "handleStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this._handleStyle;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._handleStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "trackStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this._trackStyle;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._trackStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderComponent.prototype, "railStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this._railStyle;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._railStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SliderComponent.prototype.setCls = /**
     * @return {?}
     */
    function () {
        var _a;
        this.sliderCls = (_a = {},
            _a[this.prefixCls + "-disabled"] = this._disabled,
            _a);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    SliderComponent.prototype.handleChange = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.setTrack(e);
            _this._value = e;
        }), 10);
        this.onChange.emit(e);
        this._ngModelOnChange(e);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    SliderComponent.prototype.handleAfterChange = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.setTrack(e);
            _this._value = e;
        }), 10);
        this.onAfterChange.emit(e);
    };
    /**
     * @return {?}
     */
    SliderComponent.prototype.valueRange = /**
     * @return {?}
     */
    function () {
        if (this._value < this._min) {
            this._value = this._min;
        }
        if (this._value > this._max) {
            this._value = this._max;
        }
    };
    /**
     * @return {?}
     */
    SliderComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.setCls();
        this.setValue(this._value);
        /** @type {?} */
        var sliderCoords = this._elf.nativeElement.getElementsByClassName('am-slider')[0].getBoundingClientRect();
        this.sliderLength = sliderCoords.width;
        this.sliderStart = sliderCoords.left;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    SliderComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.setValue(value, true);
    };
    /**
     * @param {?} value
     * @param {?=} isWriteValue
     * @return {?}
     */
    SliderComponent.prototype.setValue = /**
     * @param {?} value
     * @param {?=} isWriteValue
     * @return {?}
     */
    function (value, isWriteValue) {
        if (isWriteValue === void 0) { isWriteValue = false; }
        if (value === 0 || value) {
            this._value = value;
        }
        else {
            this._value = this._defaultValue;
        }
        this.valueRange();
        this.setTrack(this._value);
        if (isWriteValue) {
            this._ngModelOnChange(this._value);
        }
        else {
            this.onAfterChange.emit(this._value);
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    SliderComponent.prototype.setTrack = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.offset = 0;
        this.length = ((e - this._min) * 100) / (this._max - this._min);
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SliderComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this._ngModelOnChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SliderComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this._ngModelOnTouched = fn;
    };
    SliderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Slider , nzm-slider',
                    template: "<div class=\"am-slider\" [ngClass]=\"sliderCls\">\n  <div class=\"am-slider-rail\" [ngStyle]=\"railStyle\"></div>\n  <SliderTrack [className]=\"'am-slider-track'\"\n               [style]=\"trackStyle\"\n               [offset]=\"offset\"\n               [length]=\"length\"\n               [included]=\"included\"\n  ></SliderTrack>\n  <SliderSteps [max]=\"max\"\n               [min]=\"min\"\n               [dots]=\"dots\"\n               [step]=\"step\"\n               [marks]=\"marks\"\n               [lowerBound]=\"min\"\n               [upperBound]=\"value\"\n               [included]=\"included\"\n  ></SliderSteps>\n  <SliderHandle [max]=\"max\"\n                [min]=\"min\"\n                [value]=\"value\"\n                [step]=\"step\"\n                [disabled]=\"disabled\"\n                [handleStyle]=\"handleStyle\"\n                [sliderStart]=\"sliderStart\"\n                [sliderLength]=\"sliderLength\"\n                (onChange)=\"handleChange($event)\"\n                (onAfterChange)=\"handleAfterChange($event)\"\n  ></SliderHandle>\n  <SliderMarks [max]=\"max\"\n               [min]=\"min\"\n               [marks]=\"marks\"\n               [lowerBound]=\"min\"\n               [upperBound]=\"value\"\n               [included]=\"included\"\n  ></SliderMarks>\n</div>",
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return SliderComponent; })),
                            multi: true
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    SliderComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    SliderComponent.propDecorators = {
        min: [{ type: Input }],
        max: [{ type: Input }],
        step: [{ type: Input }],
        value: [{ type: Input }],
        defaultValue: [{ type: Input }],
        disabled: [{ type: Input }],
        marks: [{ type: Input }],
        dots: [{ type: Input }],
        included: [{ type: Input }],
        handleStyle: [{ type: Input }],
        trackStyle: [{ type: Input }],
        railStyle: [{ type: Input }],
        onAfterChange: [{ type: Output }],
        onChange: [{ type: Output }],
        amSliderWrapper: [{ type: HostBinding, args: ['class.am-slider-wrapper',] }]
    };
    return SliderComponent;
}());
export { SliderComponent };
if (false) {
    /** @type {?} */
    SliderComponent.prototype.prefixCls;
    /** @type {?} */
    SliderComponent.prototype.sliderLength;
    /** @type {?} */
    SliderComponent.prototype.sliderStart;
    /** @type {?} */
    SliderComponent.prototype.sliderCls;
    /** @type {?} */
    SliderComponent.prototype.offset;
    /** @type {?} */
    SliderComponent.prototype.length;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._min;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._max;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._step;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._value;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._defaultValue;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._marks;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._dots;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._included;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._handleStyle;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._trackStyle;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._railStyle;
    /** @type {?} */
    SliderComponent.prototype.onAfterChange;
    /** @type {?} */
    SliderComponent.prototype.onChange;
    /** @type {?} */
    SliderComponent.prototype.amSliderWrapper;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._ngModelOnChange;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._ngModelOnTouched;
    /**
     * @type {?}
     * @private
     */
    SliderComponent.prototype._elf;
}
//# sourceMappingURL=data:application/json;base64,