/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import { LocaleProviderService } from '../../locale-provider/locale-provider.service';
import { takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
var CustomKeyboardComponent = /** @class */ (function () {
    function CustomKeyboardComponent(_localeProvider) {
        this._localeProvider = _localeProvider;
        this.prefixCls = 'am-number-keyboard';
        this.okText = '';
        this._locale = {};
        this._unsubscribe$ = new Subject();
        this.onClick = new EventEmitter();
    }
    /**
     * @param {?} e
     * @return {?}
     */
    CustomKeyboardComponent.prototype.tdClick = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.onClick.emit(e);
    };
    /**
     * @return {?}
     */
    CustomKeyboardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var _a, _b;
        this.wrapCls = (_a = {},
            _a[this.prefixCls + "-item"] = true,
            _a);
        this.wrapperCls = (_b = {},
            _b[this.prefixCls + "-wrapper"] = true,
            _b);
        this._localeProvider.localeChange.pipe(takeUntil(this._unsubscribe$)).subscribe((/**
         * @param {?} _
         * @return {?}
         */
        function (_) {
            _this._locale = _this._localeProvider.getLocaleSubObj('InputItem');
            _this.okText = _this._locale.confirmLabel;
        }));
    };
    /**
     * @return {?}
     */
    CustomKeyboardComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._unsubscribe$.next();
        this._unsubscribe$.complete();
    };
    CustomKeyboardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'CustomKeyboard',
                    template: "<div [ngClass]=\"wrapperCls\">\n<table>\n  <tbody>\n    <tr>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(1)\">1\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(2)\">2\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(3)\">3\n      </td>\n      <td class=\"keyboard-delete\" [rowSpan]=\"2\" [ngClass]=\"wrapCls\" (click)=\"tdClick('delete')\">\n      </td>\n    </tr>\n    <tr>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(4)\">4\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(5)\">5\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(6)\">6\n      </td>\n\n    </tr>\n    <tr>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(7)\">7\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(8)\">8\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(9)\">9\n      </td>\n      <td class=\"keyboard-confirm\" [rowSpan]=\"2\" [ngClass]=\"wrapCls\" (click)=\"tdClick('confirm')\">{{okText}}\n      </td>\n    </tr>\n    <tr>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick('.')\">.\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(0)\">0\n      </td>\n      <td class=\"keyboard-hide\" [ngClass]=\"wrapCls\" (click)=\"tdClick('hide')\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n",
                    encapsulation: ViewEncapsulation.None,
                    providers: [LocaleProviderService]
                }] }
    ];
    /** @nocollapse */
    CustomKeyboardComponent.ctorParameters = function () { return [
        { type: LocaleProviderService }
    ]; };
    CustomKeyboardComponent.propDecorators = {
        onClick: [{ type: Output }]
    };
    return CustomKeyboardComponent;
}());
export { CustomKeyboardComponent };
if (false) {
    /** @type {?} */
    CustomKeyboardComponent.prototype.prefixCls;
    /** @type {?} */
    CustomKeyboardComponent.prototype.wrapCls;
    /** @type {?} */
    CustomKeyboardComponent.prototype.okText;
    /** @type {?} */
    CustomKeyboardComponent.prototype.wrapperCls;
    /**
     * @type {?}
     * @private
     */
    CustomKeyboardComponent.prototype._locale;
    /**
     * @type {?}
     * @private
     */
    CustomKeyboardComponent.prototype._unsubscribe$;
    /** @type {?} */
    CustomKeyboardComponent.prototype.onClick;
    /**
     * @type {?}
     * @private
     */
    CustomKeyboardComponent.prototype._localeProvider;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLWtleWJvYXJkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiaW5wdXQtaXRlbS9jdXN0b20ta2V5Ym9hcmQvY3VzdG9tLWtleWJvYXJkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUEwQixNQUFNLGVBQWUsQ0FBQztBQUNuSCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN0RixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUvQjtJQWtCRSxpQ0FBb0IsZUFBc0M7UUFBdEMsb0JBQWUsR0FBZixlQUFlLENBQXVCO1FBWDFELGNBQVMsR0FBVyxvQkFBb0IsQ0FBQztRQUV6QyxXQUFNLEdBQVcsRUFBRSxDQUFDO1FBR1osWUFBTyxHQUFRLEVBQUUsQ0FBQztRQUNsQixrQkFBYSxHQUFHLElBQUksT0FBTyxFQUFRLENBQUM7UUFHNUMsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFFMkIsQ0FBQzs7Ozs7SUFFOUQseUNBQU87Ozs7SUFBUCxVQUFRLENBQUM7UUFDUCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2QixDQUFDOzs7O0lBRUQsMENBQVE7OztJQUFSO1FBQUEsaUJBV0M7O1FBVkMsSUFBSSxDQUFDLE9BQU87WUFDVixHQUFJLElBQUksQ0FBQyxTQUFTLFVBQU8sSUFBRyxJQUFJO2VBQ2pDLENBQUM7UUFDRixJQUFJLENBQUMsVUFBVTtZQUNiLEdBQUksSUFBSSxDQUFDLFNBQVMsYUFBVSxJQUFHLElBQUk7ZUFDcEMsQ0FBQztRQUNGLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsU0FBUzs7OztRQUFDLFVBQUEsQ0FBQztZQUMvRSxLQUFJLENBQUMsT0FBTyxHQUFHLEtBQUksQ0FBQyxlQUFlLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ2pFLEtBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUM7UUFDMUMsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7O0lBRUQsNkNBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUMxQixJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2hDLENBQUM7O2dCQXhDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsa3lDQUErQztvQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7b0JBQ3JDLFNBQVMsRUFBRSxDQUFDLHFCQUFxQixDQUFDO2lCQUNuQzs7OztnQkFUUSxxQkFBcUI7OzswQkFtQjNCLE1BQU07O0lBMEJULDhCQUFDO0NBQUEsQUF6Q0QsSUF5Q0M7U0FuQ1ksdUJBQXVCOzs7SUFDbEMsNENBQXlDOztJQUN6QywwQ0FBZ0I7O0lBQ2hCLHlDQUFvQjs7SUFDcEIsNkNBQW1COzs7OztJQUVuQiwwQ0FBMEI7Ozs7O0lBQzFCLGdEQUE0Qzs7SUFFNUMsMENBQ2tDOzs7OztJQUV0QixrREFBOEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdFbmNhcHN1bGF0aW9uLCBPbkRlc3Ryb3ksIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGVQcm92aWRlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9sb2NhbGUtcHJvdmlkZXIvbG9jYWxlLXByb3ZpZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdDdXN0b21LZXlib2FyZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jdXN0b20ta2V5Ym9hcmQuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBwcm92aWRlcnM6IFtMb2NhbGVQcm92aWRlclNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIEN1c3RvbUtleWJvYXJkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBwcmVmaXhDbHM6IHN0cmluZyA9ICdhbS1udW1iZXIta2V5Ym9hcmQnO1xuICB3cmFwQ2xzOiBvYmplY3Q7XG4gIG9rVGV4dDogc3RyaW5nID0gJyc7XG4gIHdyYXBwZXJDbHM6IG9iamVjdDtcblxuICBwcml2YXRlIF9sb2NhbGU6IGFueSA9IHt9O1xuICBwcml2YXRlIF91bnN1YnNjcmliZSQgPSBuZXcgU3ViamVjdDx2b2lkPigpO1xuXG4gIEBPdXRwdXQoKVxuICBvbkNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfbG9jYWxlUHJvdmlkZXI6IExvY2FsZVByb3ZpZGVyU2VydmljZSkge31cblxuICB0ZENsaWNrKGUpIHtcbiAgICB0aGlzLm9uQ2xpY2suZW1pdChlKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMud3JhcENscyA9IHtcbiAgICAgIFtgJHt0aGlzLnByZWZpeENsc30taXRlbWBdOiB0cnVlXG4gICAgfTtcbiAgICB0aGlzLndyYXBwZXJDbHMgPSB7XG4gICAgICBbYCR7dGhpcy5wcmVmaXhDbHN9LXdyYXBwZXJgXTogdHJ1ZVxuICAgIH07XG4gICAgdGhpcy5fbG9jYWxlUHJvdmlkZXIubG9jYWxlQ2hhbmdlLnBpcGUodGFrZVVudGlsKHRoaXMuX3Vuc3Vic2NyaWJlJCkpLnN1YnNjcmliZShfID0+IHtcbiAgICAgIHRoaXMuX2xvY2FsZSA9IHRoaXMuX2xvY2FsZVByb3ZpZGVyLmdldExvY2FsZVN1Yk9iaignSW5wdXRJdGVtJyk7XG4gICAgICB0aGlzLm9rVGV4dCA9IHRoaXMuX2xvY2FsZS5jb25maXJtTGFiZWw7XG4gICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLl91bnN1YnNjcmliZSQubmV4dCgpO1xuICAgIHRoaXMuX3Vuc3Vic2NyaWJlJC5jb21wbGV0ZSgpO1xuICB9XG59XG4iXX0=