/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostListener, ViewEncapsulation, ElementRef, Renderer2 } from '@angular/core';
var TouchFeedBackComponent = /** @class */ (function () {
    function TouchFeedBackComponent(_ele, _render) {
        this._ele = _ele;
        this._render = _render;
        this.activeClassName = '';
        this.activeStyle = true;
    }
    /**
     * @return {?}
     */
    TouchFeedBackComponent.prototype.touchStart = /**
     * @return {?}
     */
    function () {
        if (this.activeStyle) {
            this._render.addClass(this._ele.nativeElement, this.activeClassName);
        }
    };
    /**
     * @return {?}
     */
    TouchFeedBackComponent.prototype.touchEnd = /**
     * @return {?}
     */
    function () {
        if (this.activeStyle) {
            this._render.removeClass(this._ele.nativeElement, this.activeClassName);
        }
    };
    TouchFeedBackComponent.decorators = [
        { type: Component, args: [{
                    selector: 'TouchFeedBack',
                    template: '<ng-content></ng-content>',
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    TouchFeedBackComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    TouchFeedBackComponent.propDecorators = {
        activeClassName: [{ type: Input }],
        activeStyle: [{ type: Input }],
        touchStart: [{ type: HostListener, args: ['touchstart',] }, { type: HostListener, args: ['mousedown',] }],
        touchEnd: [{ type: HostListener, args: ['touchend',] }, { type: HostListener, args: ['mouseup',] }]
    };
    return TouchFeedBackComponent;
}());
export { TouchFeedBackComponent };
if (false) {
    /** @type {?} */
    TouchFeedBackComponent.prototype.activeClassName;
    /** @type {?} */
    TouchFeedBackComponent.prototype.activeStyle;
    /**
     * @type {?}
     * @private
     */
    TouchFeedBackComponent.prototype._ele;
    /**
     * @type {?}
     * @private
     */
    TouchFeedBackComponent.prototype._render;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG91Y2gtZmVlZGJhY2suY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJjb3JlL2RpcmVjdGl2ZS90b3VjaC1mZWVkYmFjay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLFlBQVksRUFDWixpQkFBaUIsRUFDakIsVUFBVSxFQUNWLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUV2QjtJQXdCRSxnQ0FBb0IsSUFBZ0IsRUFBVSxPQUFrQjtRQUE1QyxTQUFJLEdBQUosSUFBSSxDQUFZO1FBQVUsWUFBTyxHQUFQLE9BQU8sQ0FBVztRQWxCdkQsb0JBQWUsR0FBRyxFQUFFLENBQUM7UUFDckIsZ0JBQVcsR0FBRyxJQUFJLENBQUM7SUFpQnVDLENBQUM7Ozs7SUFicEUsMkNBQVU7OztJQUZWO1FBR0UsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztTQUN0RTtJQUNILENBQUM7Ozs7SUFHRCx5Q0FBUTs7O0lBRlI7UUFHRSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQ3pFO0lBQ0gsQ0FBQzs7Z0JBdEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3RDOzs7O2dCQVJDLFVBQVU7Z0JBQ1YsU0FBUzs7O2tDQVNSLEtBQUs7OEJBQ0wsS0FBSzs2QkFFTCxZQUFZLFNBQUMsWUFBWSxjQUN6QixZQUFZLFNBQUMsV0FBVzsyQkFNeEIsWUFBWSxTQUFDLFVBQVUsY0FDdkIsWUFBWSxTQUFDLFNBQVM7O0lBUXpCLDZCQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0FwQlksc0JBQXNCOzs7SUFDakMsaURBQThCOztJQUM5Qiw2Q0FBNEI7Ozs7O0lBaUJoQixzQ0FBd0I7Ozs7O0lBQUUseUNBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgSG9zdExpc3RlbmVyLFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgRWxlbWVudFJlZixcbiAgUmVuZGVyZXIyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdUb3VjaEZlZWRCYWNrJyxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+JyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBUb3VjaEZlZWRCYWNrQ29tcG9uZW50IHtcbiAgQElucHV0KCkgYWN0aXZlQ2xhc3NOYW1lID0gJyc7XG4gIEBJbnB1dCgpIGFjdGl2ZVN0eWxlID0gdHJ1ZTtcblxuICBASG9zdExpc3RlbmVyKCd0b3VjaHN0YXJ0JylcbiAgQEhvc3RMaXN0ZW5lcignbW91c2Vkb3duJylcbiAgdG91Y2hTdGFydCgpIHtcbiAgICBpZiAodGhpcy5hY3RpdmVTdHlsZSkge1xuICAgICAgdGhpcy5fcmVuZGVyLmFkZENsYXNzKHRoaXMuX2VsZS5uYXRpdmVFbGVtZW50LCB0aGlzLmFjdGl2ZUNsYXNzTmFtZSk7XG4gICAgfVxuICB9XG4gIEBIb3N0TGlzdGVuZXIoJ3RvdWNoZW5kJylcbiAgQEhvc3RMaXN0ZW5lcignbW91c2V1cCcpXG4gIHRvdWNoRW5kKCkge1xuICAgIGlmICh0aGlzLmFjdGl2ZVN0eWxlKSB7XG4gICAgICB0aGlzLl9yZW5kZXIucmVtb3ZlQ2xhc3ModGhpcy5fZWxlLm5hdGl2ZUVsZW1lbnQsIHRoaXMuYWN0aXZlQ2xhc3NOYW1lKTtcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9lbGU6IEVsZW1lbnRSZWYsIHByaXZhdGUgX3JlbmRlcjogUmVuZGVyZXIyKSB7fVxufVxuIl19