/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding, TemplateRef, ViewEncapsulation } from '@angular/core';
var TabPaneBodyComponent = /** @class */ (function () {
    function TabPaneBodyComponent() {
        this._prerender = false;
        this.active = false;
        this.loaded = false;
        this.paneWrap = true;
    }
    Object.defineProperty(TabPaneBodyComponent.prototype, "prerender", {
        get: /**
         * @return {?}
         */
        function () {
            return this._prerender;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._prerender = value;
            if (value) {
                this.loaded = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabPaneBodyComponent.prototype, "wrapActive", {
        get: /**
         * @return {?}
         */
        function () {
            return this.active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabPaneBodyComponent.prototype, "wrapInactive", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.active;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TabPaneBodyComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    TabPaneBodyComponent.decorators = [
        { type: Component, args: [{
                    selector: '[tab-pane-body]',
                    template: "<ng-container *ngIf=\"loaded || prerender\">\n  <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n</ng-container>",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    TabPaneBodyComponent.ctorParameters = function () { return []; };
    TabPaneBodyComponent.propDecorators = {
        active: [{ type: Input }],
        loaded: [{ type: Input }],
        content: [{ type: Input }],
        prerender: [{ type: Input }],
        paneWrap: [{ type: HostBinding, args: ['class.am-tabs-pane-wrap',] }],
        wrapActive: [{ type: HostBinding, args: ['class.am-tabs-pane-wrap-active',] }],
        wrapInactive: [{ type: HostBinding, args: ['class.am-tabs-pane-wrap-inactive',] }]
    };
    return TabPaneBodyComponent;
}());
export { TabPaneBodyComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TabPaneBodyComponent.prototype._prerender;
    /** @type {?} */
    TabPaneBodyComponent.prototype.active;
    /** @type {?} */
    TabPaneBodyComponent.prototype.loaded;
    /** @type {?} */
    TabPaneBodyComponent.prototype.content;
    /** @type {?} */
    TabPaneBodyComponent.prototype.paneWrap;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLXBhbmUtYm9keS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInRhYnMvdGFiLXBhbmUtYm9keS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEc7SUFrQ0U7UUEzQlEsZUFBVSxHQUFZLEtBQUssQ0FBQztRQUUzQixXQUFNLEdBQVksS0FBSyxDQUFDO1FBQ3hCLFdBQU0sR0FBWSxLQUFLLENBQUM7UUFjakMsYUFBUSxHQUFZLElBQUksQ0FBQztJQVVULENBQUM7SUF0QmpCLHNCQUNJLDJDQUFTOzs7O1FBRGI7WUFFRSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDekIsQ0FBQzs7Ozs7UUFDRCxVQUFjLEtBQWM7WUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7WUFDeEIsSUFBSSxLQUFLLEVBQUU7Z0JBQ1QsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7YUFDcEI7UUFDSCxDQUFDOzs7T0FOQTtJQVVELHNCQUNJLDRDQUFVOzs7O1FBRGQ7WUFFRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckIsQ0FBQzs7O09BQUE7SUFDRCxzQkFDSSw4Q0FBWTs7OztRQURoQjtZQUVFLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3RCLENBQUM7OztPQUFBOzs7O0lBSUQsdUNBQVE7OztJQUFSLGNBQWEsQ0FBQzs7Z0JBcENmLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQix1SUFBNkM7b0JBQzdDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2lCQUN0Qzs7Ozs7eUJBS0UsS0FBSzt5QkFDTCxLQUFLOzBCQUNMLEtBQUs7NEJBQ0wsS0FBSzsyQkFXTCxXQUFXLFNBQUMseUJBQXlCOzZCQUVyQyxXQUFXLFNBQUMsZ0NBQWdDOytCQUk1QyxXQUFXLFNBQUMsa0NBQWtDOztJQVNqRCwyQkFBQztDQUFBLEFBdENELElBc0NDO1NBakNZLG9CQUFvQjs7Ozs7O0lBRS9CLDBDQUFvQzs7SUFFcEMsc0NBQWlDOztJQUNqQyxzQ0FBaUM7O0lBQ2pDLHVDQUFvQzs7SUFZcEMsd0NBQ3lCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBIb3N0QmluZGluZywgVGVtcGxhdGVSZWYsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1t0YWItcGFuZS1ib2R5XScsXG4gIHRlbXBsYXRlVXJsOiAnLi90YWItcGFuZS1ib2R5LmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBUYWJQYW5lQm9keUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgcHJpdmF0ZSBfcHJlcmVuZGVyOiBib29sZWFuID0gZmFsc2U7XG5cbiAgQElucHV0KCkgYWN0aXZlOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGxvYWRlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBjb250ZW50OiBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgQElucHV0KClcbiAgZ2V0IHByZXJlbmRlcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fcHJlcmVuZGVyO1xuICB9XG4gIHNldCBwcmVyZW5kZXIodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9wcmVyZW5kZXIgPSB2YWx1ZTtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMubG9hZGVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXRhYnMtcGFuZS13cmFwJylcbiAgcGFuZVdyYXA6IGJvb2xlYW4gPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXRhYnMtcGFuZS13cmFwLWFjdGl2ZScpXG4gIGdldCB3cmFwQWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmFjdGl2ZTtcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXRhYnMtcGFuZS13cmFwLWluYWN0aXZlJylcbiAgZ2V0IHdyYXBJbmFjdGl2ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gIXRoaXMuYWN0aXZlO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHsgfVxuXG59XG4iXX0=