/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Input, ElementRef, ViewEncapsulation, HostBinding } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var StepComponent = /** @class */ (function () {
    function StepComponent(_el) {
        this._el = _el;
        this.prefixCls = 'am-steps';
        this.stepItemCls = {};
        this.isIconString = true;
        this.clsStepItem = true;
    }
    Object.defineProperty(StepComponent.prototype, "status", {
        get: /**
         * @return {?}
         */
        function () {
            return this._status;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this._status = value;
                this.setClass();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepComponent.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this._title;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._title = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepComponent.prototype, "description", {
        get: /**
         * @return {?}
         */
        function () {
            return this._description;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._description = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepComponent.prototype, "icon", {
        get: /**
         * @return {?}
         */
        function () {
            return this._icon;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                if (typeof value !== 'string') {
                    this.isIconString = false;
                }
                this._icon = value;
                this.setClass();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    StepComponent.prototype.setClass = /**
     * @return {?}
     */
    function () {
        var _a, _b;
        this.iconCls = (_a = {},
            _a[this.prefixCls + "-icon"] = true,
            _a);
        this.stepItemCls = Object.assign(this.stepItemCls, (_b = {},
            _b[this.prefixCls + "-item-" + this.status] = true,
            _b[this.prefixCls + "-item-custom"] = this.icon,
            _b));
    };
    /**
     * @return {?}
     */
    StepComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    StepComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Step, nzm-step',
                    template: "<div [ngClass]=\"stepItemCls\">\n  <div class=\"{{prefixCls}}-item-tail\">\n    {{tailContent}}\n  </div>\n  <div class=\"{{prefixCls}}-item-icon\">\n    <span *ngIf=\"!isIconString\" [ngClass]=\"iconCls\">\n      <ng-template [ngTemplateOutlet]=\"icon\"></ng-template>\n    </span>\n    <span *ngIf=\"isIconString && (status=== 'error' || status==='finish' || status==='wait' )\" [ngClass]=\"iconCls\">\n      <Icon [type]=\"icon\" [size]=\"iconSize\">\n      </Icon>\n    </span>\n    <span *ngIf=\"isIconString && !(status=== 'error' || status==='finish' || status==='wait')\" [ngClass]=\"iconCls\">{{stepNumber}}\n    </span>\n  </div>\n  <div class=\"{{prefixCls}}-item-content\">\n    <div class=\"{{prefixCls}}-item-title\">\n      {{title}}\n    </div>\n    <div *ngIf=\"description\" class=\"{{prefixCls}}-item-description\">{{description}}</div>\n  </div>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return StepComponent; })),
                            multi: true
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    StepComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    StepComponent.propDecorators = {
        status: [{ type: Input }],
        title: [{ type: Input }],
        description: [{ type: Input }],
        icon: [{ type: Input }],
        clsStepItem: [{ type: HostBinding, args: ['class.am-steps-item',] }]
    };
    return StepComponent;
}());
export { StepComponent };
if (false) {
    /** @type {?} */
    StepComponent.prototype.prefixCls;
    /** @type {?} */
    StepComponent.prototype.stepItemCls;
    /** @type {?} */
    StepComponent.prototype.iconCls;
    /** @type {?} */
    StepComponent.prototype.tailContent;
    /** @type {?} */
    StepComponent.prototype.stepNumber;
    /** @type {?} */
    StepComponent.prototype.isIconString;
    /** @type {?} */
    StepComponent.prototype.iconSize;
    /**
     * @type {?}
     * @private
     */
    StepComponent.prototype._status;
    /**
     * @type {?}
     * @private
     */
    StepComponent.prototype._title;
    /**
     * @type {?}
     * @private
     */
    StepComponent.prototype._description;
    /**
     * @type {?}
     * @private
     */
    StepComponent.prototype._icon;
    /** @type {?} */
    StepComponent.prototype.clsStepItem;
    /**
     * @type {?}
     * @private
     */
    StepComponent.prototype._el;
}
/** @enum {string} */
var StepStatusEnum = {
    WAIT: 'wait',
    PROCESS: 'process',
    FINISH: 'finish',
    ERROR: 'error',
};
export { StepStatusEnum };
/** @enum {string} */
var StepDirectionEnum = {
    VERTICAL: 'vertical',
    HORIZONTAL: 'horizontal',
};
export { StepDirectionEnum };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInN0ZXBzL3N0ZXAvc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsVUFBVSxFQUNWLEtBQUssRUFDTCxVQUFVLEVBRVYsaUJBQWlCLEVBQ2pCLFdBQVcsRUFDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVuRDtJQW1FRSx1QkFBb0IsR0FBZTtRQUFmLFFBQUcsR0FBSCxHQUFHLENBQVk7UUF0RG5DLGNBQVMsR0FBRyxVQUFVLENBQUM7UUFDdkIsZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFJakIsaUJBQVksR0FBWSxJQUFJLENBQUM7UUErQzdCLGdCQUFXLEdBQVksSUFBSSxDQUFDO0lBRVUsQ0FBQztJQXpDdkMsc0JBQ0ksaUNBQU07Ozs7UUFEVjtZQUVFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN0QixDQUFDOzs7OztRQUNELFVBQVcsS0FBcUI7WUFDOUIsSUFBSSxLQUFLLEVBQUU7Z0JBQ1QsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7Z0JBQ3JCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQzthQUNqQjtRQUNILENBQUM7OztPQU5BO0lBT0Qsc0JBQ0ksZ0NBQUs7Ozs7UUFEVDtZQUVFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixDQUFDOzs7OztRQUNELFVBQVUsS0FBYTtZQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUN0QixDQUFDOzs7T0FIQTtJQUlELHNCQUNJLHNDQUFXOzs7O1FBRGY7WUFFRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDM0IsQ0FBQzs7Ozs7UUFDRCxVQUFnQixLQUFhO1lBQzNCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQzVCLENBQUM7OztPQUhBO0lBSUQsc0JBQ0ksK0JBQUk7Ozs7UUFEUjtZQUVFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNwQixDQUFDOzs7OztRQUNELFVBQVMsS0FBZ0M7WUFDdkMsSUFBSSxLQUFLLEVBQUU7Z0JBQ1QsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7b0JBQzdCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO2lCQUMzQjtnQkFDRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztnQkFDbkIsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO2FBQ2pCO1FBQ0gsQ0FBQzs7O09BVEE7Ozs7SUFnQkQsZ0NBQVE7OztJQUFSOztRQUNFLElBQUksQ0FBQyxPQUFPO1lBQ1YsR0FBSSxJQUFJLENBQUMsU0FBUyxVQUFPLElBQUcsSUFBSTtlQUNqQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXO1lBQy9DLEdBQUksSUFBSSxDQUFDLFNBQVMsY0FBUyxJQUFJLENBQUMsTUFBUSxJQUFHLElBQUk7WUFDL0MsR0FBSSxJQUFJLENBQUMsU0FBUyxpQkFBYyxJQUFHLElBQUksQ0FBQyxJQUFJO2dCQUM1QyxDQUFDO0lBQ0wsQ0FBQzs7OztJQUVELGdDQUFROzs7SUFBUixjQUFZLENBQUM7O2dCQS9FZCxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsdTNCQUFvQztvQkFDcEMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7b0JBQ3JDLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixXQUFXLEVBQUUsVUFBVTs7OzRCQUFDLGNBQU0sT0FBQSxhQUFhLEVBQWIsQ0FBYSxFQUFDOzRCQUM1QyxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRjtpQkFDRjs7OztnQkFsQkMsVUFBVTs7O3lCQWlDVCxLQUFLO3dCQVVMLEtBQUs7OEJBT0wsS0FBSzt1QkFPTCxLQUFLOzhCQWNMLFdBQVcsU0FBQyxxQkFBcUI7O0lBZ0JwQyxvQkFBQztDQUFBLEFBaEZELElBZ0ZDO1NBcEVZLGFBQWE7OztJQUN4QixrQ0FBdUI7O0lBQ3ZCLG9DQUFpQjs7SUFDakIsZ0NBQWdCOztJQUNoQixvQ0FBb0I7O0lBQ3BCLG1DQUFtQjs7SUFDbkIscUNBQTZCOztJQUM3QixpQ0FBaUI7Ozs7O0lBRWpCLGdDQUFnQzs7Ozs7SUFDaEMsK0JBQXVCOzs7OztJQUN2QixxQ0FBNkI7Ozs7O0lBQzdCLDhCQUF5Qzs7SUF3Q3pDLG9DQUM0Qjs7Ozs7SUFFaEIsNEJBQXVCOzs7O0lBZ0JuQyxNQUFPLE1BQU07SUFDYixTQUFVLFNBQVM7SUFDbkIsUUFBUyxRQUFRO0lBQ2pCLE9BQVEsT0FBTzs7Ozs7SUFHZixVQUFXLFVBQVU7SUFDckIsWUFBYSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIGZvcndhcmRSZWYsXG4gIElucHV0LFxuICBFbGVtZW50UmVmLFxuICBUZW1wbGF0ZVJlZixcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG4gIEhvc3RCaW5kaW5nXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1N0ZXAsIG56bS1zdGVwJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3N0ZXAuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFN0ZXBDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgU3RlcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHByZWZpeENscyA9ICdhbS1zdGVwcyc7XG4gIHN0ZXBJdGVtQ2xzID0ge307XG4gIGljb25DbHM6IG9iamVjdDtcbiAgdGFpbENvbnRlbnQ6IHN0cmluZztcbiAgc3RlcE51bWJlcjogbnVtYmVyO1xuICBpc0ljb25TdHJpbmc6IGJvb2xlYW4gPSB0cnVlO1xuICBpY29uU2l6ZTogc3RyaW5nO1xuXG4gIHByaXZhdGUgX3N0YXR1czogU3RlcFN0YXR1c0VudW07XG4gIHByaXZhdGUgX3RpdGxlOiBzdHJpbmc7XG4gIHByaXZhdGUgX2Rlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIHByaXZhdGUgX2ljb246IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgQElucHV0KClcbiAgZ2V0IHN0YXR1cygpOiBTdGVwU3RhdHVzRW51bSB7XG4gICAgcmV0dXJuIHRoaXMuX3N0YXR1cztcbiAgfVxuICBzZXQgc3RhdHVzKHZhbHVlOiBTdGVwU3RhdHVzRW51bSkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5fc3RhdHVzID0gdmFsdWU7XG4gICAgICB0aGlzLnNldENsYXNzKCk7XG4gICAgfVxuICB9XG4gIEBJbnB1dCgpXG4gIGdldCB0aXRsZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl90aXRsZTtcbiAgfVxuICBzZXQgdGl0bGUodmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMuX3RpdGxlID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgZ2V0IGRlc2NyaXB0aW9uKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2Rlc2NyaXB0aW9uO1xuICB9XG4gIHNldCBkZXNjcmlwdGlvbih2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fZGVzY3JpcHRpb24gPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgaWNvbigpOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5faWNvbjtcbiAgfVxuICBzZXQgaWNvbih2YWx1ZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55Pikge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhpcy5pc0ljb25TdHJpbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuX2ljb24gPSB2YWx1ZTtcbiAgICAgIHRoaXMuc2V0Q2xhc3MoKTtcbiAgICB9XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXN0ZXBzLWl0ZW0nKVxuICBjbHNTdGVwSXRlbTogYm9vbGVhbiA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfZWw6IEVsZW1lbnRSZWYpIHt9XG5cbiAgc2V0Q2xhc3MoKSB7XG4gICAgdGhpcy5pY29uQ2xzID0ge1xuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1pY29uYF06IHRydWVcbiAgICB9O1xuICAgIHRoaXMuc3RlcEl0ZW1DbHMgPSBPYmplY3QuYXNzaWduKHRoaXMuc3RlcEl0ZW1DbHMsIHtcbiAgICAgIFtgJHt0aGlzLnByZWZpeENsc30taXRlbS0ke3RoaXMuc3RhdHVzfWBdOiB0cnVlLFxuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1pdGVtLWN1c3RvbWBdOiB0aGlzLmljb25cbiAgICB9KTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge31cbn1cblxuZXhwb3J0IGVudW0gU3RlcFN0YXR1c0VudW0ge1xuICBXQUlUID0gJ3dhaXQnLFxuICBQUk9DRVNTID0gJ3Byb2Nlc3MnLFxuICBGSU5JU0ggPSAnZmluaXNoJyxcbiAgRVJST1IgPSAnZXJyb3InXG59XG5leHBvcnQgZW51bSBTdGVwRGlyZWN0aW9uRW51bSB7XG4gIFZFUlRJQ0FMID0gJ3ZlcnRpY2FsJyxcbiAgSE9SSVpPTlRBTCA9ICdob3Jpem9udGFsJ1xufVxuIl19