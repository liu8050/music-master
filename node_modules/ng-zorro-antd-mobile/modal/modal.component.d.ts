import { TemplateRef, EventEmitter } from '@angular/core';
import { ModalOptions } from './modal-options.provider';
import { ControlValueAccessor } from '@angular/forms';
export declare class ModalComponent implements ControlValueAccessor {
    option: ModalOptions;
    autoFocus: {
        focus: boolean;
        date: Date;
    };
    transitionName: string;
    maskTransitionName: string;
    wrapCls: object;
    cls: object;
    btnGroupClass: object;
    data: {
        text: string;
        password: string;
    };
    onChanged: (visiable: boolean) => {};
    onTouched: () => {};
    title: string | TemplateRef<any>;
    closable: boolean;
    maskClosable: boolean;
    popup: boolean;
    animationType: string;
    transparent: boolean;
    footer: Array<any>;
    platform: string;
    className: string;
    wrapClassName: string;
    actions: Array<any>;
    defaultValue: Array<string>;
    type: string;
    placeholders: Array<string>;
    operation: boolean;
    onClose: EventEmitter<any>;
    panend(event: any): void;
    constructor(option: ModalOptions);
    isTemplateRef(value: string | TemplateRef<any>): boolean;
    isNoTitle(value: string | TemplateRef<any>): boolean;
    setTransitionName(visible: boolean): void;
    setActiveName(name: string): string;
    setLeaveActiveName(name: string): string;
    setClassMap(): void;
    inputChange(type: string, value: string): void;
    leaveAnimation(): void;
    writeValue(value: boolean): void;
    registerOnChange(fn: (_: boolean) => {}): void;
    registerOnTouched(fn: () => {}): void;
}
export declare class ModalServiceComponent extends ModalComponent {
    option: ModalOptions;
    constructor(option: ModalOptions);
}
