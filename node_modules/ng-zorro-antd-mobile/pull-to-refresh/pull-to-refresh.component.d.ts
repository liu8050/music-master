import { EventEmitter, ElementRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export interface Indicator {
    activate?: any;
    deactivate?: any;
    release?: any;
    finish?: any;
}
export declare class PullToRefreshComponent implements ControlValueAccessor {
    private ele;
    transtionCls: any;
    style: object;
    startY: number;
    state: any;
    private _headerIndicator;
    private _footerIndicator;
    private _startTime;
    private _endTime;
    private _endRreach;
    private _direction;
    private _clientHeight;
    private _currentContentHeight;
    private _lastcontentOffset;
    private _ngModelOnChange;
    private _ngModelOnTouched;
    private _pullToRefresh;
    distanceToRefresh: number;
    damping: number;
    endReachedRefresh: boolean;
    refreshing: boolean;
    direction: string;
    headerIndicator: Indicator;
    footerIndicator: Indicator;
    onRefresh: EventEmitter<any>;
    refresh: boolean;
    container: boolean;
    refreshUp: boolean;
    refreshDown: boolean;
    touchstart(e: any): void;
    touchmove(e: any): void;
    touchend(e: any): void;
    touchcancel(evt: any): void;
    scroll(evt: any): void;
    constructor(ele: ElementRef);
    isTemplateRef(value: any): boolean;
    translateY(distanceY: any): void;
    writeValue(value: object): void;
    registerOnChange(fn: (_: object) => {}): void;
    registerOnTouched(fn: () => {}): void;
}
